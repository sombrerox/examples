{"version":3,"sources":["webpack:///webpack/bootstrap cbc53c8607d7c819ff64","webpack:///./node_modules/@dojo/core/Destroyable.mjs","webpack:///./node_modules/@dojo/core/Evented.mjs","webpack:///./node_modules/@dojo/core/aspect.mjs","webpack:///./node_modules/@dojo/core/lang.mjs","webpack:///./node_modules/@dojo/has/has.mjs","webpack:///./node_modules/@dojo/shim/Map.mjs","webpack:///./node_modules/@dojo/shim/Promise.mjs","webpack:///./node_modules/@dojo/shim/Symbol.mjs","webpack:///./node_modules/@dojo/shim/WeakMap.mjs","webpack:///./node_modules/@dojo/shim/array.mjs","webpack:///./node_modules/@dojo/shim/global.mjs","webpack:///./node_modules/@dojo/shim/number.mjs","webpack:///./node_modules/@dojo/shim/object.mjs","webpack:///./node_modules/@dojo/shim/string.mjs","webpack:///./node_modules/@dojo/shim/support/has.mjs","webpack:///./node_modules/@dojo/shim/support/queue.mjs","webpack:///./node_modules/@dojo/shim/support/util.mjs","webpack:///./node_modules/@dojo/widget-core/Injector.mjs","webpack:///./node_modules/@dojo/widget-core/NodeHandler.mjs","webpack:///./node_modules/@dojo/widget-core/Registry.mjs","webpack:///./node_modules/@dojo/widget-core/RegistryHandler.mjs","webpack:///./node_modules/@dojo/widget-core/WidgetBase.mjs","webpack:///./node_modules/@dojo/widget-core/animations/cssTransitions.mjs","webpack:///./node_modules/@dojo/widget-core/d.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/afterRender.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/alwaysRender.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/beforeProperties.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/customElement.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/diffProperty.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/handleDecorator.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/inject.mjs","webpack:///./node_modules/@dojo/widget-core/diff.mjs","webpack:///./node_modules/@dojo/widget-core/mixins/Projector.mjs","webpack:///./node_modules/@dojo/widget-core/mixins/Themed.mjs","webpack:///./node_modules/@dojo/widget-core/registerCustomElement.mjs","webpack:///./node_modules/@dojo/widget-core/vdom.mjs","webpack:///./node_modules/@dojo/cli-build-widget/template/custom-element.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/accordion-pane/index.ts","webpack:///./src/theme/accordion-pane.m.css?341c"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","noop","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_Promise__","resolve","destroyed","Error","Destroyable","[object Object]","this","handles","handle","Array","isArray","__WEBPACK_IMPORTED_MODULE_0__lang__","_handles","push","splice","indexOf","destroy","forEach","own","__webpack_exports__","regexMap","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_Map__","Evented","__WEBPACK_IMPORTED_MODULE_1__Destroyable__","super","arguments","listenersMap","event","methods","type","globString","targetString","regex","has","RegExp","replace","set","test","isGlobMatch","method","listener","map","_addListener","listeners","joinPointOrTarget","methodNameOrAdvice","objectAdvice","adviseJoinPoint","target","methodName","advice","adviseObject","getDispatcherObject","afterObject","isMapLike","value","dispatchAdviceMap","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_WeakMap__","nextId","dispatcher","receiveArguments","previous","advised","id","next","before","undefined","__WEBPACK_IMPORTED_MODULE_1__lang__","joinPoint","getJoinPointDispatcher","apply","adviceMap","unshift","after","existing","results","executionId","args","around","newResults","reduce","previousArgs","result","previousResult","concat","slice","createHandle","length","destructor","called","testCache","testFunctions","testThenables","globalScope","window","global","self","staticFeatures","DojoHasEnvironment","staticCache","add","feature","overwrite","normalizedFeature","toLowerCase","Boolean","exists","TypeError","then","isFeatureTestThenable","resolvedValue","document","location","process","versions","node","Map","__WEBPACK_IMPORTED_MODULE_1__global__","ShimPromise","__WEBPACK_IMPORTED_MODULE_0__global__","Promise","Symbol","wellKnown","__WEBPACK_IMPORTED_MODULE_2__support_util__","for","WeakMap","from","of","copyWithin","fill","find","findIndex","includes","__WEBPACK_IMPORTED_MODULE_4__support_util__","globalObject","Math","pow","assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","fromCodePoint","raw","codePointAt","endsWith","normalize","repeat","startsWith","padEnd","padStart","String","__WEBPACK_IMPORTED_MODULE_0__dojo_has_has__","every","key","Number","POSITIVE_INFINITY","e","imul","Observable","Set","getCallSite","callSite","substitutions","key1","key2","freeze","postMessage","requestAnimationFrame","setImmediate","MutationObserver","WebKitMutationObserver","example","createElement","observer","observe","attributes","style","setProperty","takeRecords","Animation","KeyframeEffect","executeTask","item","isActive","callback","getQueueHandle","enqueue","queue","addEventListener","source","data","stopPropagation","shift","queueTask","queueAnimationTask","rafId","bind","cancelAnimationFrame","writable","nativeFunction","Injector","__WEBPACK_IMPORTED_MODULE_0__dojo_core_Evented__","payload","_payload","invalidator","_invalidator","NodeEventType","_nodeMap","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_Map__","element","emit","Widget","Projector","clear","WIDGET_BASE_TYPE","__WEBPACK_IMPORTED_MODULE_2__dojo_shim_Symbol__","isWidgetBaseConstructor","_type","Registry","__WEBPACK_IMPORTED_MODULE_3__dojo_core_Evented__","widgetLabel","action","label","_widgetRegistry","toString","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_Promise__","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","injectorItem","injector","promise","default","isWidgetConstructorDefaultExport","hasInjector","__WEBPACK_IMPORTED_MODULE_1__dojo_core_Evented__","_registry","__WEBPACK_IMPORTED_MODULE_2__Registry__","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","registry","registeredLabels","on","decoratorMap","boundAuto","__WEBPACK_IMPORTED_MODULE_4__diff__","noBind","WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","__WEBPACK_IMPORTED_MODULE_6__NodeHandler__","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","__WEBPACK_IMPORTED_MODULE_7__vdom__","dirty","onAttach","onDetach","nodeHandler","coreProperties","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","properties","changedPropertyKeys","instanceData","__WEBPACK_IMPORTED_MODULE_5__RegistryHandler__","originalProperties","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","previousProperty","newProperty","_bindFunctionProperty","diffFunctions","changed","_mapDiffPropertyReactions","reaction","previousProperties","newProperties","children","dNode","_runBeforeRenders","runAfterRenders","__WEBPACK_IMPORTED_MODULE_3__d__","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","getPrototypeOf","_buildDecoratorList","reactionPropertyMap","reactionArguments","__WEBPACK_IMPORTED_MODULE_8__Registry__","_bindFunctionPropertyMap","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_WeakMap__","bindInfo","boundFunc","scope","beforeProperties","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","afterConstructors","afterConstructor","pop","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","enter","enterAnimation","activeClass","enterAnimationActive","classList","remove","exit","exitAnimation","removeNode","exitAnimationActive","child","DOMVNODE","widgetConstructor","WNODE","tag","propertiesOrChildren","deferredPropertiesCallback","VNODE","attrs","props","diffType","isElementNode","tagName","events","domNode","text","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_Symbol__","isWNode","isVNode","__WEBPACK_IMPORTED_MODULE_0__handleDecorator__","propertyKey","addDecorator","alwaysRender","__WEBPACK_IMPORTED_MODULE_1__beforeProperties__","customElement","childType","__WEBPACK_IMPORTED_MODULE_0__registerCustomElement__","DOJO","registryFactory","__WEBPACK_IMPORTED_MODULE_1__Registry__","__customElementDescriptor","diffProperty","diffFunction","reactionFunction","handleDecorator","handler","descriptor","registeredInjectorsMap","inject","getProperties","__WEBPACK_IMPORTED_MODULE_1__handleDecorator__","__WEBPACK_IMPORTED_MODULE_2__beforeProperties__","getInjector","registeredInjectors","__WEBPACK_IMPORTED_MODULE_0__Registry__","reference","ignore","isObjectOrArray","shallow","validOldProperty","validNewProperty","previousKeys","newKeys","some","ProjectorAttachState","AttachType","ProjectorMixin","Base","_root","body","_async","_projectorProperties","_projectionOptions","transitions","__WEBPACK_IMPORTED_MODULE_2__animations_cssTransitions__","root","projectorState","Detached","options","Append","_attach","Merge","Attached","async","doc","previousRoot","createDocumentFragment","__setChildren__","__setProperties__","__WEBPACK_IMPORTED_MODULE_1__dojo_core_lang__","__setCoreProperties__","_projection","childNodes","outerHTML","__WEBPACK_IMPORTED_MODULE_4__d__","_attachHandle","sync","__WEBPACK_IMPORTED_MODULE_5__vdom__","append","merge","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_3__decorators_afterRender__","Function","theme","__WEBPACK_IMPORTED_MODULE_3__decorators_handleDecorator__","themeRegistry","themeInjector","__WEBPACK_IMPORTED_MODULE_1__Injector__","INJECTED_THEME_KEY","setInvalidator","THEME_KEY","ThemedMixin","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","classes","_recalculateThemeClasses","className","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_registeredBaseTheme","join","baseThemes","finalBaseTheme","baseTheme","_a","currentClassNames","baseClass","themeKey","__WEBPACK_IMPORTED_MODULE_4__decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_5__diff__","__WEBPACK_IMPORTED_MODULE_2__decorators_inject__","CustomElementChildType","DomToWidgetWrapper","__WEBPACK_IMPORTED_MODULE_1__WidgetBase__","__WEBPACK_IMPORTED_MODULE_7__decorators_alwaysRender__","create","WidgetConstructor","attributeMap","attributeName","HTMLElement","_eventProperties","_initialised","domProperties","_attributesToProperties","filteredPropertyName","_getProperty","_setProperty","eventName","_getEventProperty","_setEventProperty","eventCallback","dispatchEvent","CustomEvent","bubbles","detail","defineProperties","TEXT","__WEBPACK_IMPORTED_MODULE_3__dojo_shim_array__","childNode","_render","_childConnected","widgetProperties","renderChildren","__children__","themeContext","__WEBPACK_IMPORTED_MODULE_6__mixins_Themed__","_getTheme","__WEBPACK_IMPORTED_MODULE_5__dojo_shim_global__","__WEBPACK_IMPORTED_MODULE_2__mixins_Projector__","_projector","setProperties","dojoce","themes","parentNode","filter","Child","isWidget","__properties__","oldValue","getAttribute","observedAttributes","register","customElements","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","emptyArray","widgetInstanceMap","__WEBPACK_IMPORTED_MODULE_4__dojo_shim_WeakMap__","projectorStateMap","same","dnode1","dnode2","__WEBPACK_IMPORTED_MODULE_2__d__","instance","missingTransition","checkStyleValue","styleValue","updateEvent","currentValue","projectionOptions","previousValue","projectorInstance","eventMap","nodeMap","previousEvent","evt","addClasses","classNames","split","removeClasses","focusNode","propValue","deferredRenderCallbacks","focus","removeOrphanedEvents","onlyEvents","propName","isEvent","substr","updateAttribute","attrName","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","updateAttributes","previousAttributes","attrNames","attrCount","updateProperties","includesEventsAndAttributes","propertiesUpdated","propNames","propCount","previousClasses","currentClasses","newClasses","previousClassName","classIndex","styleNames","styleCount","j","styleName","newStyleValue","styleApplyer","domValue","lastIndexOf","findIndexOfChild","sameAs","start","toInternalWNode","rendered","filterAndDecorateChildren","nodeAdded","dnode","nodeToRemove","pointerEvents","removeDomNode","removeChild","checkDistinguishable","indexToCheck","parentInstance","nodeIdentifier","parentName","updateChildren","parentVNode","oldChildren","newChildren","oldChildrenLength","newChildrenLength","depth","oldIndex","newIndex","textUpdated","oldChild","newChild","inserted","addDeferredProperties","updateDom","findOldIndex","addChild","insertBeforeDomNode","nextIndex","insertBeforeChildren","insertBefore","createDom","afterRenderCallbacks","childToRemove","addChildren","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_array__","domElement","toUpperCase","initPropertiesAndChildren","parentInstanceData","__WEBPACK_IMPORTED_MODULE_3__Registry__","renderQueue","scheduleRender","__render__","filteredRendered","addRoot","mergeElement","ownerDocument","createElementNS","appendChild","newDomNode","createTextNode","replaceChild","previousRendered","updated","current","buildPreviousProperties","updateAnimation","vnode","decoratedDeferredProperties","runDeferredRenderCallbacks","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_global__","runAfterRenderCallbacks","requestIdleCallback","setTimeout","renderScheduled","renders","sort","a","b","previouslyRendered","dom","finalProjectorOptions","projectorOptions","defaults","getProjectionOptions","rootNode","projection","widgetFactory","registerCustomElement","defaultExport","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","nextTick","title","browser","env","argv","version","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","t","desc","r","Reflect","decorate","metadataKey","metadataValue","metadata","setPrototypeOf","g","eval","ThemedBase","__WEBPACK_IMPORTED_MODULE_5__dojo_widget_core_mixins_Themed__","__WEBPACK_IMPORTED_MODULE_7__dojo_widget_core_WidgetBase__","AccordionPaneBase","functionName","existingProperty","__WEBPACK_IMPORTED_MODULE_1__dojo_core_aspect__","onRequestClose","onRequestOpen","openKeys","__WEBPACK_IMPORTED_MODULE_2__dojo_core_lang__","_assignCallback","open","__WEBPACK_IMPORTED_MODULE_4__dojo_shim_array__","__WEBPACK_IMPORTED_MODULE_6__dojo_widget_core_d__","__WEBPACK_IMPORTED_MODULE_8__theme_accordion_pane_m_css__","__WEBPACK_IMPORTED_MODULE_3__dojo_widget_core_decorators_customElement__"," _key"],"mappings":"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","file":"accordion-pane-2.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cbc53c8607d7c819ff64","import { createCompositeHandle } from './lang';\nimport Promise from '@dojo/shim/Promise';\n/**\n * No operation function to replace own once instance is destoryed\n */\nfunction noop() {\n    return Promise.resolve(false);\n}\n/**\n * No op function used to replace own, once instance has been destoryed\n */\nfunction destroyed() {\n    throw new Error('Call made to destroyed method');\n}\nexport class Destroyable {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.handles = [];\n    }\n    /**\n     * Register handles for the instance that will be destroyed when `this.destroy` is called\n     *\n     * @param {Handle} handle The handle to add for the instance\n     * @returns {Handle} a handle for the handle, removes the handle for the instance and calls destroy\n     */\n    own(handles) {\n        const handle = Array.isArray(handles) ? createCompositeHandle(...handles) : handles;\n        const { handles: _handles } = this;\n        _handles.push(handle);\n        return {\n            destroy() {\n                _handles.splice(_handles.indexOf(handle));\n                handle.destroy();\n            }\n        };\n    }\n    /**\n     * Destrpys all handers registered for the instance\n     *\n     * @returns {Promise<any} a promise that resolves once all handles have been destroyed\n     */\n    destroy() {\n        return new Promise((resolve) => {\n            this.handles.forEach((handle) => {\n                handle && handle.destroy && handle.destroy();\n            });\n            this.destroy = noop;\n            this.own = destroyed;\n            resolve(true);\n        });\n    }\n}\nexport default Destroyable;\n//# sourceMappingURL=Destroyable.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/core/Destroyable.mjs\n// module id = ./node_modules/@dojo/core/Destroyable.mjs\n// module chunks = accordion-pane","import Map from '@dojo/shim/Map';\nimport { Destroyable } from './Destroyable';\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map();\n/**\n * Determines is the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString, targetString) {\n    if (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n        let regex;\n        if (regexMap.has(globString)) {\n            regex = regexMap.get(globString);\n        }\n        else {\n            regex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n            regexMap.set(globString, regex);\n        }\n        return regex.test(targetString);\n    }\n    else {\n        return globString === targetString;\n    }\n}\n/**\n * Event Class\n */\nexport class Evented extends Destroyable {\n    constructor() {\n        super(...arguments);\n        /**\n         * map of listeners keyed by event type\n         */\n        this.listenersMap = new Map();\n    }\n    emit(event) {\n        this.listenersMap.forEach((methods, type) => {\n            if (isGlobMatch(type, event.type)) {\n                methods.forEach((method) => {\n                    method.call(this, event);\n                });\n            }\n        });\n    }\n    on(type, listener) {\n        if (Array.isArray(listener)) {\n            const handles = listener.map((listener) => this._addListener(type, listener));\n            return {\n                destroy() {\n                    handles.forEach((handle) => handle.destroy());\n                }\n            };\n        }\n        return this._addListener(type, listener);\n    }\n    _addListener(type, listener) {\n        const listeners = this.listenersMap.get(type) || [];\n        listeners.push(listener);\n        this.listenersMap.set(type, listeners);\n        return {\n            destroy: () => {\n                const listeners = this.listenersMap.get(type) || [];\n                listeners.splice(listeners.indexOf(listener), 1);\n            }\n        };\n    }\n}\nexport default Evented;\n//# sourceMappingURL=Evented.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/core/Evented.mjs\n// module id = ./node_modules/@dojo/core/Evented.mjs\n// module chunks = accordion-pane","import WeakMap from '@dojo/shim/WeakMap';\nimport { createHandle } from './lang';\n/**\n * An internal type guard that determines if an value is MapLike or not\n *\n * @param value The value to guard against\n */\nfunction isMapLike(value) {\n    return value && typeof value.get === 'function' && typeof value.set === 'function';\n}\n/**\n * A weak map of dispatchers used to apply the advice\n */\nconst dispatchAdviceMap = new WeakMap();\n/**\n * A UID for tracking advice ordering\n */\nlet nextId = 0;\n/**\n * Internal function that advises a join point\n *\n * @param dispatcher The current advice dispatcher\n * @param type The type of before or after advice to apply\n * @param advice The advice to apply\n * @param receiveArguments If true, the advice will receive the arguments passed to the join point\n * @return The handle that will remove the advice\n */\nfunction adviseObject(dispatcher, type, advice, receiveArguments) {\n    let previous = dispatcher && dispatcher[type];\n    let advised = {\n        id: nextId++,\n        advice: advice,\n        receiveArguments: receiveArguments\n    };\n    if (previous) {\n        if (type === 'after') {\n            // add the listener to the end of the list\n            // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\n            while (previous.next && (previous = previous.next)) { }\n            previous.next = advised;\n            advised.previous = previous;\n        }\n        else {\n            // add to the beginning\n            if (dispatcher) {\n                dispatcher.before = advised;\n            }\n            advised.next = previous;\n            previous.previous = advised;\n        }\n    }\n    else {\n        dispatcher && (dispatcher[type] = advised);\n    }\n    advice = previous = undefined;\n    return createHandle(function () {\n        let { previous = undefined, next = undefined } = advised || {};\n        if (dispatcher && !previous && !next) {\n            dispatcher[type] = undefined;\n        }\n        else {\n            if (previous) {\n                previous.next = next;\n            }\n            else {\n                dispatcher && (dispatcher[type] = next);\n            }\n            if (next) {\n                next.previous = previous;\n            }\n        }\n        if (advised) {\n            delete advised.advice;\n        }\n        dispatcher = advised = undefined;\n    });\n}\n/**\n * Advise a join point (function) with supplied advice\n *\n * @param joinPoint The function to be advised\n * @param type The type of advice to be applied\n * @param advice The advice to apply\n */\nfunction adviseJoinPoint(joinPoint, type, advice) {\n    let dispatcher;\n    if (type === 'around') {\n        dispatcher = getJoinPointDispatcher(advice.apply(this, [joinPoint]));\n    }\n    else {\n        dispatcher = getJoinPointDispatcher(joinPoint);\n        // cannot have undefined in map due to code logic, using !\n        const adviceMap = dispatchAdviceMap.get(dispatcher);\n        if (type === 'before') {\n            (adviceMap.before || (adviceMap.before = [])).unshift(advice);\n        }\n        else {\n            (adviceMap.after || (adviceMap.after = [])).push(advice);\n        }\n    }\n    return dispatcher;\n}\n/**\n * An internal function that resolves or creates the dispatcher for a given join point\n *\n * @param target The target object or map\n * @param methodName The name of the method that the dispatcher should be resolved for\n * @return The dispatcher\n */\nfunction getDispatcherObject(target, methodName) {\n    const existing = isMapLike(target) ? target.get(methodName) : target && target[methodName];\n    let dispatcher;\n    if (!existing || existing.target !== target) {\n        /* There is no existing dispatcher, therefore we will create one */\n        dispatcher = function () {\n            let executionId = nextId;\n            let args = arguments;\n            let results;\n            let before = dispatcher.before;\n            while (before) {\n                if (before.advice) {\n                    args = before.advice.apply(this, args) || args;\n                }\n                before = before.next;\n            }\n            if (dispatcher.around && dispatcher.around.advice) {\n                results = dispatcher.around.advice(this, args);\n            }\n            let after = dispatcher.after;\n            while (after && after.id !== undefined && after.id < executionId) {\n                if (after.advice) {\n                    if (after.receiveArguments) {\n                        let newResults = after.advice.apply(this, args);\n                        results = newResults === undefined ? results : newResults;\n                    }\n                    else {\n                        results = after.advice.call(this, results, args);\n                    }\n                }\n                after = after.next;\n            }\n            return results;\n        };\n        if (isMapLike(target)) {\n            target.set(methodName, dispatcher);\n        }\n        else {\n            target && (target[methodName] = dispatcher);\n        }\n        if (existing) {\n            dispatcher.around = {\n                advice: function (target, args) {\n                    return existing.apply(target, args);\n                }\n            };\n        }\n        dispatcher.target = target;\n    }\n    else {\n        dispatcher = existing;\n    }\n    return dispatcher;\n}\n/**\n * Returns the dispatcher function for a given joinPoint (method/function)\n *\n * @param joinPoint The function that is to be advised\n */\nfunction getJoinPointDispatcher(joinPoint) {\n    function dispatcher(...args) {\n        // cannot have undefined in map due to code logic, using !\n        const { before, after, joinPoint } = dispatchAdviceMap.get(dispatcher);\n        if (before) {\n            args = before.reduce((previousArgs, advice) => {\n                const currentArgs = advice.apply(this, previousArgs);\n                return currentArgs || previousArgs;\n            }, args);\n        }\n        let result = joinPoint.apply(this, args);\n        if (after) {\n            result = after.reduce((previousResult, advice) => {\n                return advice.apply(this, [previousResult].concat(args));\n            }, result);\n        }\n        return result;\n    }\n    /* We want to \"clone\" the advice that has been applied already, if this\n     * joinPoint is already advised */\n    if (dispatchAdviceMap.has(joinPoint)) {\n        // cannot have undefined in map due to code logic, using !\n        const adviceMap = dispatchAdviceMap.get(joinPoint);\n        let { before, after } = adviceMap;\n        if (before) {\n            before = before.slice(0);\n        }\n        if (after) {\n            after = after.slice(0);\n        }\n        dispatchAdviceMap.set(dispatcher, {\n            joinPoint: adviceMap.joinPoint,\n            before,\n            after\n        });\n    }\n    else {\n        /* Otherwise, this is a new joinPoint, so we will create the advice map afresh */\n        dispatchAdviceMap.set(dispatcher, { joinPoint });\n    }\n    return dispatcher;\n}\n/**\n * Apply advice *after* the supplied joinPoint (function)\n *\n * @param joinPoint A function that should have advice applied to\n * @param advice The after advice\n */\nfunction afterJoinPoint(joinPoint, advice) {\n    return adviseJoinPoint(joinPoint, 'after', advice);\n}\n/**\n * Attaches \"after\" advice to be executed after the original method.\n * The advising function will receive the original method's return value and arguments object.\n * The value it returns will be returned from the method when it is called (even if the return value is undefined).\n *\n * @param target Object whose method will be aspected\n * @param methodName Name of method to aspect\n * @param advice Advising function which will receive the original method's return value and arguments object\n * @return A handle which will remove the aspect when destroy is called\n */\nfunction afterObject(target, methodName, advice) {\n    return adviseObject(getDispatcherObject(target, methodName), 'after', advice);\n}\nexport function after(joinPointOrTarget, methodNameOrAdvice, objectAdvice) {\n    if (typeof joinPointOrTarget === 'function') {\n        return afterJoinPoint(joinPointOrTarget, methodNameOrAdvice);\n    }\n    else {\n        return afterObject(joinPointOrTarget, methodNameOrAdvice, objectAdvice);\n    }\n}\n/**\n * Apply advice *around* the supplied joinPoint (function)\n *\n * @param joinPoint A function that should have advice applied to\n * @param advice The around advice\n */\nexport function aroundJoinPoint(joinPoint, advice) {\n    return adviseJoinPoint(joinPoint, 'around', advice);\n}\n/**\n * Attaches \"around\" advice around the original method.\n *\n * @param target Object whose method will be aspected\n * @param methodName Name of method to aspect\n * @param advice Advising function which will receive the original function\n * @return A handle which will remove the aspect when destroy is called\n */\nexport function aroundObject(target, methodName, advice) {\n    let dispatcher = getDispatcherObject(target, methodName);\n    let previous = dispatcher.around;\n    let advised;\n    if (advice) {\n        advised = advice(function () {\n            if (previous && previous.advice) {\n                return previous.advice(this, arguments);\n            }\n        });\n    }\n    dispatcher.around = {\n        advice: function (target, args) {\n            return advised ? advised.apply(target, args) : previous && previous.advice && previous.advice(target, args);\n        }\n    };\n    return createHandle(function () {\n        advised = dispatcher = undefined;\n    });\n}\nexport function around(joinPointOrTarget, methodNameOrAdvice, objectAdvice) {\n    if (typeof joinPointOrTarget === 'function') {\n        return aroundJoinPoint(joinPointOrTarget, methodNameOrAdvice);\n    }\n    else {\n        return aroundObject(joinPointOrTarget, methodNameOrAdvice, objectAdvice);\n    }\n}\n/**\n * Apply advice *before* the supplied joinPoint (function)\n *\n * @param joinPoint A function that should have advice applied to\n * @param advice The before advice\n */\nexport function beforeJoinPoint(joinPoint, advice) {\n    return adviseJoinPoint(joinPoint, 'before', advice);\n}\n/**\n * Attaches \"before\" advice to be executed before the original method.\n *\n * @param target Object whose method will be aspected\n * @param methodName Name of method to aspect\n * @param advice Advising function which will receive the same arguments as the original, and may return new arguments\n * @return A handle which will remove the aspect when destroy is called\n */\nexport function beforeObject(target, methodName, advice) {\n    return adviseObject(getDispatcherObject(target, methodName), 'before', advice);\n}\nexport function before(joinPointOrTarget, methodNameOrAdvice, objectAdvice) {\n    if (typeof joinPointOrTarget === 'function') {\n        return beforeJoinPoint(joinPointOrTarget, methodNameOrAdvice);\n    }\n    else {\n        return beforeObject(joinPointOrTarget, methodNameOrAdvice, objectAdvice);\n    }\n}\n/**\n * Attaches advice to be executed after the original method.\n * The advising function will receive the same arguments as the original method.\n * The value it returns will be returned from the method when it is called *unless* its return value is undefined.\n *\n * @param target Object whose method will be aspected\n * @param methodName Name of method to aspect\n * @param advice Advising function which will receive the same arguments as the original method\n * @return A handle which will remove the aspect when destroy is called\n */\nexport function on(target, methodName, advice) {\n    return adviseObject(getDispatcherObject(target, methodName), 'after', advice, true);\n}\n//# sourceMappingURL=aspect.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/core/aspect.mjs\n// module id = ./node_modules/@dojo/core/aspect.mjs\n// module chunks = accordion-pane","import { assign } from '@dojo/shim/object';\nexport { assign } from '@dojo/shim/object';\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction copyArray(array, inherited) {\n    return array.map(function (item) {\n        if (Array.isArray(item)) {\n            return copyArray(item, inherited);\n        }\n        return !shouldDeepCopyObject(item)\n            ? item\n            : _mixin({\n                deep: true,\n                inherited: inherited,\n                sources: [item],\n                target: {}\n            });\n    });\n}\nfunction _mixin(kwArgs) {\n    const deep = kwArgs.deep;\n    const inherited = kwArgs.inherited;\n    const target = kwArgs.target;\n    const copied = kwArgs.copied || [];\n    const copiedClone = [...copied];\n    for (let i = 0; i < kwArgs.sources.length; i++) {\n        const source = kwArgs.sources[i];\n        if (source === null || source === undefined) {\n            continue;\n        }\n        for (let key in source) {\n            if (inherited || hasOwnProperty.call(source, key)) {\n                let value = source[key];\n                if (copiedClone.indexOf(value) !== -1) {\n                    continue;\n                }\n                if (deep) {\n                    if (Array.isArray(value)) {\n                        value = copyArray(value, inherited);\n                    }\n                    else if (shouldDeepCopyObject(value)) {\n                        const targetValue = target[key] || {};\n                        copied.push(source);\n                        value = _mixin({\n                            deep: true,\n                            inherited: inherited,\n                            sources: [value],\n                            target: targetValue,\n                            copied\n                        });\n                    }\n                }\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport function create(prototype, ...mixins) {\n    if (!mixins.length) {\n        throw new RangeError('lang.create requires at least one mixin object.');\n    }\n    const args = mixins.slice();\n    args.unshift(Object.create(prototype));\n    return assign.apply(null, args);\n}\nexport function deepAssign(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: false,\n        sources: sources,\n        target: target\n    });\n}\nexport function deepMixin(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Creates a new object using the provided source's prototype as the prototype for the new object, and then\n * deep copies the provided source's values into the new target.\n *\n * @param source The object to duplicate\n * @return The new object\n */\nexport function duplicate(source) {\n    const target = Object.create(Object.getPrototypeOf(source));\n    return deepMixin(target, source);\n}\n/**\n * Determines whether two values are the same value.\n *\n * @param a First value to compare\n * @param b Second value to compare\n * @return true if the values are the same; false otherwise\n */\nexport function isIdentical(a, b) {\n    return (a === b ||\n        /* both values are NaN */\n        (a !== a && b !== b));\n}\n/**\n * Returns a function that binds a method to the specified object at runtime. This is similar to\n * `Function.prototype.bind`, but instead of a function it takes the name of a method on an object.\n * As a result, the function returned by `lateBind` will always call the function currently assigned to\n * the specified property on the object as of the moment the function it returns is called.\n *\n * @param instance The context object\n * @param method The name of the method on the context object to bind to itself\n * @param suppliedArgs An optional array of values to prepend to the `instance[method]` arguments list\n * @return The bound function\n */\nexport function lateBind(instance, method, ...suppliedArgs) {\n    return suppliedArgs.length\n        ? function () {\n            const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n            // TS7017\n            return instance[method].apply(instance, args);\n        }\n        : function () {\n            // TS7017\n            return instance[method].apply(instance, arguments);\n        };\n}\nexport function mixin(target, ...sources) {\n    return _mixin({\n        deep: false,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction, ...suppliedArgs) {\n    return function () {\n        const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n        return targetFunction.apply(this, args);\n    };\n}\n/**\n * Returns an object with a destroy method that, when called, calls the passed-in destructor.\n * This is intended to provide a unified interface for creating \"remove\" / \"destroy\" handlers for\n * event listeners, timers, etc.\n *\n * @param destructor A function that will be called when the handle's `destroy` method is invoked\n * @return The handle object\n */\nexport function createHandle(destructor) {\n    let called = false;\n    return {\n        destroy: function () {\n            if (!called) {\n                called = true;\n                destructor();\n            }\n        }\n    };\n}\n/**\n * Returns a single handle that can be used to destroy multiple handles simultaneously.\n *\n * @param handles An array of handles with `destroy` methods\n * @return The handle object\n */\nexport function createCompositeHandle(...handles) {\n    return createHandle(function () {\n        for (let i = 0; i < handles.length; i++) {\n            handles[i].destroy();\n        }\n    });\n}\n//# sourceMappingURL=lang.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/core/lang.mjs\n// module id = ./node_modules/@dojo/core/lang.mjs\n// module chunks = accordion-pane","function isFeatureTestThenable(value) {\n    return value && value.then;\n}\n/**\n * A cache of results of feature tests\n */\nexport const testCache = {};\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions = {};\n/**\n * A cache of unresolved thenables (probably promises)\n * @type {{}}\n */\nconst testThenables = {};\n/**\n * A reference to the global scope (`window` in a browser, `global` in NodeJS)\n */\nconst globalScope = (function () {\n    /* istanbul ignore else */\n    if (typeof window !== 'undefined') {\n        // Browsers\n        return window;\n    }\n    else if (typeof global !== 'undefined') {\n        // Node\n        return global;\n    }\n    else if (typeof self !== 'undefined') {\n        // Web workers\n        return self;\n    }\n    /* istanbul ignore next */\n    return {};\n})();\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures } = globalScope.DojoHasEnvironment || {};\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in globalScope) {\n    delete globalScope.DojoHasEnvironment;\n}\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache = staticFeatures\n    ? isStaticFeatureFunction(staticFeatures) ? staticFeatures.apply(globalScope) : staticFeatures\n    : {}; /* Providing an empty cache, if none was in the environment\n\n/**\n* AMD plugin function.\n*\n* Conditional loads modules based on a has feature test value.\n*\n* @param resourceId Gives the resolved module id to load.\n* @param require The loader require function with respect to the module that contained the plugin resource in its\n*                dependency list.\n* @param load Callback to loader that consumes result of plugin demand.\n*/\nexport function load(resourceId, require, load, config) {\n    resourceId ? require([resourceId], load) : load();\n}\n/**\n * AMD plugin function.\n *\n * Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n * value(s).\n *\n * @param resourceId The id of the module\n * @param normalize Resolves a relative module id into an absolute module id\n */\nexport function normalize(resourceId, normalize) {\n    const tokens = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n    let i = 0;\n    function get(skip) {\n        const term = tokens[i++];\n        if (term === ':') {\n            // empty string module name, resolves to null\n            return null;\n        }\n        else {\n            // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n            if (tokens[i++] === '?') {\n                if (!skip && has(term)) {\n                    // matched the feature, get the first value from the options\n                    return get();\n                }\n                else {\n                    // did not match, get the second value, passing over the first\n                    get(true);\n                    return get(skip);\n                }\n            }\n            // a module\n            return term;\n        }\n    }\n    const id = get();\n    return id && normalize(id);\n}\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature) {\n    const normalizedFeature = feature.toLowerCase();\n    return Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature, value, overwrite = false) {\n    const normalizedFeature = feature.toLowerCase();\n    if (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n        throw new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n    }\n    if (typeof value === 'function') {\n        testFunctions[normalizedFeature] = value;\n    }\n    else if (isFeatureTestThenable(value)) {\n        testThenables[feature] = value.then((resolvedValue) => {\n            testCache[feature] = resolvedValue;\n            delete testThenables[feature];\n        }, () => {\n            delete testThenables[feature];\n        });\n    }\n    else {\n        testCache[normalizedFeature] = value;\n        delete testFunctions[normalizedFeature];\n    }\n}\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name (if a string) or identifier (if an integer) of the feature to test.\n */\nexport default function has(feature) {\n    let result;\n    const normalizedFeature = feature.toLowerCase();\n    if (normalizedFeature in staticCache) {\n        result = staticCache[normalizedFeature];\n    }\n    else if (testFunctions[normalizedFeature]) {\n        result = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n        delete testFunctions[normalizedFeature];\n    }\n    else if (normalizedFeature in testCache) {\n        result = testCache[normalizedFeature];\n    }\n    else if (feature in testThenables) {\n        return false;\n    }\n    else {\n        throw new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n    }\n    return result;\n}\n/*\n * Out of the box feature tests\n */\n/* Environments */\n/* Used as a value to provide a debug only code path */\nadd('debug', true);\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function () {\n    if (typeof process === 'object' && process.versions && process.versions.node) {\n        return process.versions.node;\n    }\n});\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/has/has.mjs\n// module id = ./node_modules/@dojo/has/has.mjs\n// module chunks = accordion-pane","import { isArrayLike, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from './support/has';\nimport './Symbol';\nexport let Map = global.Map;\nif (!true) {\n    Map = (_a = class Map {\n            constructor(iterable) {\n                this._keys = [];\n                this._values = [];\n                this[Symbol.toStringTag] = 'Map';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            const value = iterable[i];\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                }\n            }\n            /**\n             * An alternative to Array.prototype.indexOf using Object.is\n             * to check for equality. See http://mzl.la/1zuKO2V\n             */\n            _indexOfKey(keys, key) {\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    if (objectIs(keys[i], key)) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            get size() {\n                return this._keys.length;\n            }\n            clear() {\n                this._keys.length = this._values.length = 0;\n            }\n            delete(key) {\n                const index = this._indexOfKey(this._keys, key);\n                if (index < 0) {\n                    return false;\n                }\n                this._keys.splice(index, 1);\n                this._values.splice(index, 1);\n                return true;\n            }\n            entries() {\n                const values = this._keys.map((key, i) => {\n                    return [key, this._values[i]];\n                });\n                return new ShimIterator(values);\n            }\n            forEach(callback, context) {\n                const keys = this._keys;\n                const values = this._values;\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    callback.call(context, values[i], keys[i], this);\n                }\n            }\n            get(key) {\n                const index = this._indexOfKey(this._keys, key);\n                return index < 0 ? undefined : this._values[index];\n            }\n            has(key) {\n                return this._indexOfKey(this._keys, key) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._keys);\n            }\n            set(key, value) {\n                let index = this._indexOfKey(this._keys, key);\n                index = index < 0 ? this._keys.length : index;\n                this._keys[index] = key;\n                this._values[index] = value;\n                return this;\n            }\n            values() {\n                return new ShimIterator(this._values);\n            }\n            [Symbol.iterator]() {\n                return this.entries();\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Map;\nvar _a;\n//# sourceMappingURL=Map.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/Map.mjs\n// module id = ./node_modules/@dojo/shim/Map.mjs\n// module chunks = accordion-pane","import global from './global';\nimport { queueMicroTask } from './support/queue';\nimport './Symbol';\nimport has from './support/has';\nexport let ShimPromise = global.Promise;\nexport const isThenable = function isThenable(value) {\n    return value && typeof value.then === 'function';\n};\nif (!true) {\n    global.Promise = ShimPromise = (_a = class Promise {\n            /**\n             * Creates a new Promise.\n             *\n             * @constructor\n             *\n             * @param executor\n             * The executor function is called immediately when the Promise is instantiated. It is responsible for\n             * starting the asynchronous operation when it is invoked.\n             *\n             * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n             * successfully, or the `reject` function when the operation fails.\n             */\n            constructor(executor) {\n                /**\n                 * The current state of this promise.\n                 */\n                this.state = 1 /* Pending */;\n                this[Symbol.toStringTag] = 'Promise';\n                /**\n                 * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n                 */\n                let isChained = false;\n                /**\n                 * Whether or not this promise is in a resolved state.\n                 */\n                const isResolved = () => {\n                    return this.state !== 1 /* Pending */ || isChained;\n                };\n                /**\n                 * Callbacks that should be invoked once the asynchronous operation has completed.\n                 */\n                let callbacks = [];\n                /**\n                 * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n                 * enqueues callbacks for execution on the next event loop turn.\n                 */\n                let whenFinished = function (callback) {\n                    if (callbacks) {\n                        callbacks.push(callback);\n                    }\n                };\n                /**\n                 * Settles this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const settle = (newState, value) => {\n                    // A promise can only be settled once.\n                    if (this.state !== 1 /* Pending */) {\n                        return;\n                    }\n                    this.state = newState;\n                    this.resolvedValue = value;\n                    whenFinished = queueMicroTask;\n                    // Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n                    // wait an extra turn.\n                    if (callbacks && callbacks.length > 0) {\n                        queueMicroTask(function () {\n                            if (callbacks) {\n                                let count = callbacks.length;\n                                for (let i = 0; i < count; ++i) {\n                                    callbacks[i].call(null);\n                                }\n                                callbacks = null;\n                            }\n                        });\n                    }\n                };\n                /**\n                 * Resolves this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const resolve = (newState, value) => {\n                    if (isResolved()) {\n                        return;\n                    }\n                    if (isThenable(value)) {\n                        value.then(settle.bind(null, 0 /* Fulfilled */), settle.bind(null, 2 /* Rejected */));\n                        isChained = true;\n                    }\n                    else {\n                        settle(newState, value);\n                    }\n                };\n                this.then = (onFulfilled, onRejected) => {\n                    return new Promise((resolve, reject) => {\n                        // whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n                        // promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n                        // event loop.\n                        whenFinished(() => {\n                            const callback = this.state === 2 /* Rejected */ ? onRejected : onFulfilled;\n                            if (typeof callback === 'function') {\n                                try {\n                                    resolve(callback(this.resolvedValue));\n                                }\n                                catch (error) {\n                                    reject(error);\n                                }\n                            }\n                            else if (this.state === 2 /* Rejected */) {\n                                reject(this.resolvedValue);\n                            }\n                            else {\n                                resolve(this.resolvedValue);\n                            }\n                        });\n                    });\n                };\n                try {\n                    executor(resolve.bind(null, 0 /* Fulfilled */), resolve.bind(null, 2 /* Rejected */));\n                }\n                catch (error) {\n                    settle(2 /* Rejected */, error);\n                }\n            }\n            static all(iterable) {\n                return new this(function (resolve, reject) {\n                    const values = [];\n                    let complete = 0;\n                    let total = 0;\n                    let populating = true;\n                    function fulfill(index, value) {\n                        values[index] = value;\n                        ++complete;\n                        finish();\n                    }\n                    function finish() {\n                        if (populating || complete < total) {\n                            return;\n                        }\n                        resolve(values);\n                    }\n                    function processItem(index, item) {\n                        ++total;\n                        if (isThenable(item)) {\n                            // If an item Promise rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(fulfill.bind(null, index), reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(fulfill.bind(null, index));\n                        }\n                    }\n                    let i = 0;\n                    for (const value of iterable) {\n                        processItem(i, value);\n                        i++;\n                    }\n                    populating = false;\n                    finish();\n                });\n            }\n            static race(iterable) {\n                return new this(function (resolve, reject) {\n                    for (const item of iterable) {\n                        if (item instanceof Promise) {\n                            // If a Promise item rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(resolve, reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(resolve);\n                        }\n                    }\n                });\n            }\n            static reject(reason) {\n                return new this(function (resolve, reject) {\n                    reject(reason);\n                });\n            }\n            static resolve(value) {\n                return new this(function (resolve) {\n                    resolve(value);\n                });\n            }\n            catch(onRejected) {\n                return this.then(undefined, onRejected);\n            }\n        },\n        _a[Symbol.species] = ShimPromise,\n        _a);\n}\nexport default ShimPromise;\nvar _a;\n//# sourceMappingURL=Promise.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/Promise.mjs\n// module id = ./node_modules/@dojo/shim/Promise.mjs\n// module chunks = accordion-pane","import has from './support/has';\nimport global from './global';\nimport { getValueDescriptor } from './support/util';\nexport let Symbol = global.Symbol;\nif (!true) {\n    /**\n     * Throws if the value is not a symbol, used internally within the Shim\n     * @param  {any}    value The value to check\n     * @return {symbol}       Returns the symbol or throws\n     */\n    const validateSymbol = function validateSymbol(value) {\n        if (!isSymbol(value)) {\n            throw new TypeError(value + ' is not a symbol');\n        }\n        return value;\n    };\n    const defineProperties = Object.defineProperties;\n    const defineProperty = Object.defineProperty;\n    const create = Object.create;\n    const objPrototype = Object.prototype;\n    const globalSymbols = {};\n    const getSymbolName = (function () {\n        const created = create(null);\n        return function (desc) {\n            let postfix = 0;\n            let name;\n            while (created[String(desc) + (postfix || '')]) {\n                ++postfix;\n            }\n            desc += String(postfix || '');\n            created[desc] = true;\n            name = '@@' + desc;\n            // FIXME: Temporary guard until the duplicate execution when testing can be\n            // pinned down.\n            if (!Object.getOwnPropertyDescriptor(objPrototype, name)) {\n                defineProperty(objPrototype, name, {\n                    set: function (value) {\n                        defineProperty(this, name, getValueDescriptor(value));\n                    }\n                });\n            }\n            return name;\n        };\n    })();\n    const InternalSymbol = function Symbol(description) {\n        if (this instanceof InternalSymbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        return Symbol(description);\n    };\n    Symbol = global.Symbol = function Symbol(description) {\n        if (this instanceof Symbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        const sym = Object.create(InternalSymbol.prototype);\n        description = description === undefined ? '' : String(description);\n        return defineProperties(sym, {\n            __description__: getValueDescriptor(description),\n            __name__: getValueDescriptor(getSymbolName(description))\n        });\n    };\n    /* Decorate the Symbol function with the appropriate properties */\n    defineProperty(Symbol, 'for', getValueDescriptor(function (key) {\n        if (globalSymbols[key]) {\n            return globalSymbols[key];\n        }\n        return (globalSymbols[key] = Symbol(String(key)));\n    }));\n    defineProperties(Symbol, {\n        keyFor: getValueDescriptor(function (sym) {\n            let key;\n            validateSymbol(sym);\n            for (key in globalSymbols) {\n                if (globalSymbols[key] === sym) {\n                    return key;\n                }\n            }\n        }),\n        hasInstance: getValueDescriptor(Symbol.for('hasInstance'), false, false),\n        isConcatSpreadable: getValueDescriptor(Symbol.for('isConcatSpreadable'), false, false),\n        iterator: getValueDescriptor(Symbol.for('iterator'), false, false),\n        match: getValueDescriptor(Symbol.for('match'), false, false),\n        observable: getValueDescriptor(Symbol.for('observable'), false, false),\n        replace: getValueDescriptor(Symbol.for('replace'), false, false),\n        search: getValueDescriptor(Symbol.for('search'), false, false),\n        species: getValueDescriptor(Symbol.for('species'), false, false),\n        split: getValueDescriptor(Symbol.for('split'), false, false),\n        toPrimitive: getValueDescriptor(Symbol.for('toPrimitive'), false, false),\n        toStringTag: getValueDescriptor(Symbol.for('toStringTag'), false, false),\n        unscopables: getValueDescriptor(Symbol.for('unscopables'), false, false)\n    });\n    /* Decorate the InternalSymbol object */\n    defineProperties(InternalSymbol.prototype, {\n        constructor: getValueDescriptor(Symbol),\n        toString: getValueDescriptor(function () {\n            return this.__name__;\n        }, false, false)\n    });\n    /* Decorate the Symbol.prototype */\n    defineProperties(Symbol.prototype, {\n        toString: getValueDescriptor(function () {\n            return 'Symbol (' + validateSymbol(this).__description__ + ')';\n        }),\n        valueOf: getValueDescriptor(function () {\n            return validateSymbol(this);\n        })\n    });\n    defineProperty(Symbol.prototype, Symbol.toPrimitive, getValueDescriptor(function () {\n        return validateSymbol(this);\n    }));\n    defineProperty(Symbol.prototype, Symbol.toStringTag, getValueDescriptor('Symbol', false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toPrimitive, getValueDescriptor(Symbol.prototype[Symbol.toPrimitive], false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toStringTag, getValueDescriptor(Symbol.prototype[Symbol.toStringTag], false, false, true));\n}\n/**\n * A custom guard function that determines if an object is a symbol or not\n * @param  {any}       value The value to check to see if it is a symbol or not\n * @return {is symbol}       Returns true if a symbol or not (and narrows the type guard)\n */\nexport function isSymbol(value) {\n    return (value && (typeof value === 'symbol' || value['@@toStringTag'] === 'Symbol')) || false;\n}\n/**\n * Fill any missing well known symbols if the native Symbol is missing them\n */\n[\n    'hasInstance',\n    'isConcatSpreadable',\n    'iterator',\n    'species',\n    'replace',\n    'search',\n    'split',\n    'match',\n    'toPrimitive',\n    'toStringTag',\n    'unscopables',\n    'observable'\n].forEach((wellKnown) => {\n    if (!Symbol[wellKnown]) {\n        Object.defineProperty(Symbol, wellKnown, getValueDescriptor(Symbol.for(wellKnown), false, false));\n    }\n});\nexport default Symbol;\n//# sourceMappingURL=Symbol.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/Symbol.mjs\n// module id = ./node_modules/@dojo/shim/Symbol.mjs\n// module chunks = accordion-pane","import global from './global';\nimport { isArrayLike } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let WeakMap = global.WeakMap;\nif (!true) {\n    const DELETED = {};\n    const getUID = function getUID() {\n        return Math.floor(Math.random() * 100000000);\n    };\n    const generateName = (function () {\n        let startId = Math.floor(Date.now() % 100000000);\n        return function generateName() {\n            return '__wm' + getUID() + (startId++ + '__');\n        };\n    })();\n    WeakMap = class WeakMap {\n        constructor(iterable) {\n            this[Symbol.toStringTag] = 'WeakMap';\n            this._name = generateName();\n            this._frozenEntries = [];\n            if (iterable) {\n                if (isArrayLike(iterable)) {\n                    for (let i = 0; i < iterable.length; i++) {\n                        const item = iterable[i];\n                        this.set(item[0], item[1]);\n                    }\n                }\n                else {\n                    for (const [key, value] of iterable) {\n                        this.set(key, value);\n                    }\n                }\n            }\n        }\n        _getFrozenEntryIndex(key) {\n            for (let i = 0; i < this._frozenEntries.length; i++) {\n                if (this._frozenEntries[i].key === key) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        delete(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                entry.value = DELETED;\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                this._frozenEntries.splice(frozenIndex, 1);\n                return true;\n            }\n            return false;\n        }\n        get(key) {\n            if (key === undefined || key === null) {\n                return undefined;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                return entry.value;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return this._frozenEntries[frozenIndex].value;\n            }\n        }\n        has(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return true;\n            }\n            return false;\n        }\n        set(key, value) {\n            if (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n                throw new TypeError('Invalid value used as weak map key');\n            }\n            let entry = key[this._name];\n            if (!entry || entry.key !== key) {\n                entry = Object.create(null, {\n                    key: { value: key }\n                });\n                if (Object.isFrozen(key)) {\n                    this._frozenEntries.push(entry);\n                }\n                else {\n                    Object.defineProperty(key, this._name, {\n                        value: entry\n                    });\n                }\n            }\n            entry.value = value;\n            return this;\n        }\n    };\n}\nexport default WeakMap;\n//# sourceMappingURL=WeakMap.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/WeakMap.mjs\n// module id = ./node_modules/@dojo/shim/WeakMap.mjs\n// module chunks = accordion-pane","import global from './global';\nimport { isArrayLike, isIterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\nexport let from;\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of;\n/* ES6 Array instance methods */\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin;\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill;\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find;\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex;\n/* ES7 Array instance methods */\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes;\nif (true && true) {\n    from = global.Array.from;\n    of = global.Array.of;\n    copyWithin = wrapNative(global.Array.prototype.copyWithin);\n    fill = wrapNative(global.Array.prototype.fill);\n    find = wrapNative(global.Array.prototype.find);\n    findIndex = wrapNative(global.Array.prototype.findIndex);\n}\nelse {\n    // It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n    // To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        if (isNaN(length)) {\n            return 0;\n        }\n        length = Number(length);\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    /**\n     * From ES6 7.1.4 ToInteger()\n     *\n     * @param value A value to convert\n     * @return An integer\n     */\n    const toInteger = function toInteger(value) {\n        value = Number(value);\n        if (isNaN(value)) {\n            return 0;\n        }\n        if (value === 0 || !isFinite(value)) {\n            return value;\n        }\n        return (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n    };\n    /**\n     * Normalizes an offset against a given length, wrapping it if negative.\n     *\n     * @param value The original offset\n     * @param length The total length to normalize against\n     * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n     */\n    const normalizeOffset = function normalizeOffset(value, length) {\n        return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n    };\n    from = function from(arrayLike, mapFunction, thisArg) {\n        if (arrayLike == null) {\n            throw new TypeError('from: requires an array-like object');\n        }\n        if (mapFunction && thisArg) {\n            mapFunction = mapFunction.bind(thisArg);\n        }\n        /* tslint:disable-next-line:variable-name */\n        const Constructor = this;\n        const length = toLength(arrayLike.length);\n        // Support extension\n        const array = typeof Constructor === 'function' ? Object(new Constructor(length)) : new Array(length);\n        if (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n            return array;\n        }\n        // if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n        // with the iteration on IE when using a NaN array length.\n        if (isArrayLike(arrayLike)) {\n            if (length === 0) {\n                return [];\n            }\n            for (let i = 0; i < arrayLike.length; i++) {\n                array[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n            }\n        }\n        else {\n            let i = 0;\n            for (const value of arrayLike) {\n                array[i] = mapFunction ? mapFunction(value, i) : value;\n                i++;\n            }\n        }\n        if (arrayLike.length !== undefined) {\n            array.length = length;\n        }\n        return array;\n    };\n    of = function of(...items) {\n        return Array.prototype.slice.call(items);\n    };\n    copyWithin = function copyWithin(target, offset, start, end) {\n        if (target == null) {\n            throw new TypeError('copyWithin: target must be an array-like object');\n        }\n        const length = toLength(target.length);\n        offset = normalizeOffset(toInteger(offset), length);\n        start = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        let count = Math.min(end - start, length - offset);\n        let direction = 1;\n        if (offset > start && offset < start + count) {\n            direction = -1;\n            start += count - 1;\n            offset += count - 1;\n        }\n        while (count > 0) {\n            if (start in target) {\n                target[offset] = target[start];\n            }\n            else {\n                delete target[offset];\n            }\n            offset += direction;\n            start += direction;\n            count--;\n        }\n        return target;\n    };\n    fill = function fill(target, value, start, end) {\n        const length = toLength(target.length);\n        let i = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        while (i < end) {\n            target[i++] = value;\n        }\n        return target;\n    };\n    find = function find(target, callback, thisArg) {\n        const index = findIndex(target, callback, thisArg);\n        return index !== -1 ? target[index] : undefined;\n    };\n    findIndex = function findIndex(target, callback, thisArg) {\n        const length = toLength(target.length);\n        if (!callback) {\n            throw new TypeError('find: second argument must be a function');\n        }\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        for (let i = 0; i < length; i++) {\n            if (callback(target[i], i, target)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\nif (true) {\n    includes = wrapNative(global.Array.prototype.includes);\n}\nelse {\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        length = Number(length);\n        if (isNaN(length)) {\n            return 0;\n        }\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    includes = function includes(target, searchElement, fromIndex = 0) {\n        let len = toLength(target.length);\n        for (let i = fromIndex; i < len; ++i) {\n            const currentElement = target[i];\n            if (searchElement === currentElement ||\n                (searchElement !== searchElement && currentElement !== currentElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n//# sourceMappingURL=array.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/array.mjs\n// module id = ./node_modules/@dojo/shim/array.mjs\n// module chunks = accordion-pane","const globalObject = (function () {\n    if (typeof global !== 'undefined') {\n        // global spec defines a reference to the global object called 'global'\n        // https://github.com/tc39/proposal-global\n        // `global` is also defined in NodeJS\n        return global;\n    }\n    else if (typeof window !== 'undefined') {\n        // window is defined in browsers\n        return window;\n    }\n    else if (typeof self !== 'undefined') {\n        // self is defined in WebWorkers\n        return self;\n    }\n})();\nexport default globalObject;\n//# sourceMappingURL=global.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/global.mjs\n// module id = ./node_modules/@dojo/shim/global.mjs\n// module chunks = accordion-pane","import global from './global';\n/**\n * The smallest interval between two representable numbers.\n */\nexport const EPSILON = 1;\n/**\n * The maximum safe integer in JavaScript\n */\nexport const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n/**\n * The minimum safe integer in JavaScript\n */\nexport const MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n/**\n * Determines whether the passed value is NaN without coersion.\n *\n * @param value The value to test\n * @return true if the value is NaN, false if it is not\n */\nexport function isNaN(value) {\n    return typeof value === 'number' && global.isNaN(value);\n}\n/**\n * Determines whether the passed value is a finite number without coersion.\n *\n * @param value The value to test\n * @return true if the value is finite, false if it is not\n */\nexport function isFinite(value) {\n    return typeof value === 'number' && global.isFinite(value);\n}\n/**\n * Determines whether the passed value is an integer.\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isInteger(value) {\n    return isFinite(value) && Math.floor(value) === value;\n}\n/**\n * Determines whether the passed value is an integer that is 'safe,' meaning:\n *   1. it can be expressed as an IEEE-754 double precision number\n *   2. it has a one-to-one mapping to a mathematical integer, meaning its\n *      IEEE-754 representation cannot be the result of rounding any other\n *      integer to fit the IEEE-754 representation\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isSafeInteger(value) {\n    return isInteger(value) && Math.abs(value) <= MAX_SAFE_INTEGER;\n}\n//# sourceMappingURL=number.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/number.mjs\n// module id = ./node_modules/@dojo/shim/number.mjs\n// module chunks = accordion-pane","import global from './global';\nimport has from './support/has';\nimport { isSymbol } from './Symbol';\nexport let assign;\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor;\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames;\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols;\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is;\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys;\n/* ES7 Object static methods */\nexport let getOwnPropertyDescriptors;\nexport let entries;\nexport let values;\nif (true) {\n    const globalObject = global.Object;\n    assign = globalObject.assign;\n    getOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n    getOwnPropertyNames = globalObject.getOwnPropertyNames;\n    getOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n    is = globalObject.is;\n    keys = globalObject.keys;\n}\nelse {\n    keys = function symbolAwareKeys(o) {\n        return Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    assign = function assign(target, ...sources) {\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        const to = Object(target);\n        sources.forEach((nextSource) => {\n            if (nextSource) {\n                // Skip over if undefined or null\n                keys(nextSource).forEach((nextKey) => {\n                    to[nextKey] = nextSource[nextKey];\n                });\n            }\n        });\n        return to;\n    };\n    getOwnPropertyDescriptor = function getOwnPropertyDescriptor(o, prop) {\n        if (isSymbol(prop)) {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n        else {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n    };\n    getOwnPropertyNames = function getOwnPropertyNames(o) {\n        return Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return Object.getOwnPropertyNames(o)\n            .filter((key) => Boolean(key.match(/^@@.+/)))\n            .map((key) => Symbol.for(key.substring(2)));\n    };\n    is = function is(value1, value2) {\n        if (value1 === value2) {\n            return value1 !== 0 || 1 / value1 === 1 / value2; // -0\n        }\n        return value1 !== value1 && value2 !== value2; // NaN\n    };\n}\nif (true) {\n    const globalObject = global.Object;\n    getOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n    entries = globalObject.entries;\n    values = globalObject.values;\n}\nelse {\n    getOwnPropertyDescriptors = function getOwnPropertyDescriptors(o) {\n        return getOwnPropertyNames(o).reduce((previous, key) => {\n            previous[key] = getOwnPropertyDescriptor(o, key);\n            return previous;\n        }, {});\n    };\n    entries = function entries(o) {\n        return keys(o).map((key) => [key, o[key]]);\n    };\n    values = function values(o) {\n        return keys(o).map((key) => o[key]);\n    };\n}\n//# sourceMappingURL=object.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/object.mjs\n// module id = ./node_modules/@dojo/shim/object.mjs\n// module chunks = accordion-pane","import global from './global';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n/* ES6 static methods */\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint;\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw;\n/* ES6 instance methods */\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith;\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes;\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize;\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith;\n/* ES7 instance methods */\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd;\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart;\nif (true && true) {\n    fromCodePoint = global.String.fromCodePoint;\n    raw = global.String.raw;\n    codePointAt = wrapNative(global.String.prototype.codePointAt);\n    endsWith = wrapNative(global.String.prototype.endsWith);\n    includes = wrapNative(global.String.prototype.includes);\n    normalize = wrapNative(global.String.prototype.normalize);\n    repeat = wrapNative(global.String.prototype.repeat);\n    startsWith = wrapNative(global.String.prototype.startsWith);\n}\nelse {\n    /**\n     * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n     * Used by startsWith, includes, and endsWith.\n     *\n     * @return Normalized position.\n     */\n    const normalizeSubstringArgs = function (name, text, search, position, isEnd = false) {\n        if (text == null) {\n            throw new TypeError('string.' + name + ' requires a valid string to search against.');\n        }\n        const length = text.length;\n        position = position !== position ? (isEnd ? length : 0) : position;\n        return [text, String(search), Math.min(Math.max(position, 0), length)];\n    };\n    fromCodePoint = function fromCodePoint(...codePoints) {\n        // Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n        const length = arguments.length;\n        if (!length) {\n            return '';\n        }\n        const fromCharCode = String.fromCharCode;\n        const MAX_SIZE = 0x4000;\n        let codeUnits = [];\n        let index = -1;\n        let result = '';\n        while (++index < length) {\n            let codePoint = Number(arguments[index]);\n            // Code points must be finite integers within the valid range\n            let isValid = isFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n            if (!isValid) {\n                throw RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            }\n            else {\n                // Astral code point; split in surrogate halves\n                // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                let highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n                let lowSurrogate = codePoint % 0x400 + LOW_SURROGATE_MIN;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += fromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n    raw = function raw(callSite, ...substitutions) {\n        let rawStrings = callSite.raw;\n        let result = '';\n        let numSubstitutions = substitutions.length;\n        if (callSite == null || callSite.raw == null) {\n            throw new TypeError('string.raw requires a valid callSite object with a raw value');\n        }\n        for (let i = 0, length = rawStrings.length; i < length; i++) {\n            result += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n        }\n        return result;\n    };\n    codePointAt = function codePointAt(text, position = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n        if (text == null) {\n            throw new TypeError('string.codePointAt requries a valid string.');\n        }\n        const length = text.length;\n        if (position !== position) {\n            position = 0;\n        }\n        if (position < 0 || position >= length) {\n            return undefined;\n        }\n        // Get the first code unit\n        const first = text.charCodeAt(position);\n        if (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n            // Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n            // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            const second = text.charCodeAt(position + 1);\n            if (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n                return (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n            }\n        }\n        return first;\n    };\n    endsWith = function endsWith(text, search, endPosition) {\n        if (endPosition == null) {\n            endPosition = text.length;\n        }\n        [text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n        const start = endPosition - search.length;\n        if (start < 0) {\n            return false;\n        }\n        return text.slice(start, endPosition) === search;\n    };\n    includes = function includes(text, search, position = 0) {\n        [text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n        return text.indexOf(search, position) !== -1;\n    };\n    repeat = function repeat(text, count = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n        if (text == null) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (count !== count) {\n            count = 0;\n        }\n        if (count < 0 || count === Infinity) {\n            throw new RangeError('string.repeat requires a non-negative finite count.');\n        }\n        let result = '';\n        while (count) {\n            if (count % 2) {\n                result += text;\n            }\n            if (count > 1) {\n                text += text;\n            }\n            count >>= 1;\n        }\n        return result;\n    };\n    startsWith = function startsWith(text, search, position = 0) {\n        search = String(search);\n        [text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n        const end = position + search.length;\n        if (end > text.length) {\n            return false;\n        }\n        return text.slice(position, end) === search;\n    };\n}\nif (true) {\n    padEnd = wrapNative(global.String.prototype.padEnd);\n    padStart = wrapNative(global.String.prototype.padStart);\n}\nelse {\n    padEnd = function padEnd(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padEnd requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText +=\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length);\n        }\n        return strText;\n    };\n    padStart = function padStart(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padStart requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText =\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length) +\n                    strText;\n        }\n        return strText;\n    };\n}\n//# sourceMappingURL=string.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/string.mjs\n// module id = ./node_modules/@dojo/shim/string.mjs\n// module chunks = accordion-pane","import has, { add } from '@dojo/has/has';\nimport global from '../global';\nexport default has;\nexport * from '@dojo/has/has';\n/* ECMAScript 6 and 7 Features */\n/* Array */\nadd('es6-array', () => {\n    return (['from', 'of'].every((key) => key in global.Array) &&\n        ['findIndex', 'find', 'copyWithin'].every((key) => key in global.Array.prototype));\n}, true);\nadd('es6-array-fill', () => {\n    if ('fill' in global.Array.prototype) {\n        /* Some versions of Safari do not properly implement this */\n        return [1].fill(9, Number.POSITIVE_INFINITY)[0] === 1;\n    }\n    return false;\n}, true);\nadd('es7-array', () => 'includes' in global.Array.prototype, true);\n/* Map */\nadd('es6-map', () => {\n    if (typeof global.Map === 'function') {\n        /*\n    IE11 and older versions of Safari are missing critical ES6 Map functionality\n    We wrap this in a try/catch because sometimes the Map constructor exists, but does not\n    take arguments (iOS 8.4)\n     */\n        try {\n            const map = new global.Map([[0, 1]]);\n            return map.has(0) &&\n                typeof map.keys === 'function' &&\n                true &&\n                typeof map.values === 'function' &&\n                typeof map.entries === 'function';\n        }\n        catch (e) {\n            /* istanbul ignore next: not testing on iOS at the moment */\n            return false;\n        }\n    }\n    return false;\n}, true);\n/* Math */\nadd('es6-math', () => {\n    return [\n        'clz32',\n        'sign',\n        'log10',\n        'log2',\n        'log1p',\n        'expm1',\n        'cosh',\n        'sinh',\n        'tanh',\n        'acosh',\n        'asinh',\n        'atanh',\n        'trunc',\n        'fround',\n        'cbrt',\n        'hypot'\n    ].every((name) => typeof global.Math[name] === 'function');\n}, true);\nadd('es6-math-imul', () => {\n    if ('imul' in global.Math) {\n        /* Some versions of Safari on ios do not properly implement this */\n        return Math.imul(0xffffffff, 5) === -5;\n    }\n    return false;\n}, true);\n/* Object */\nadd('es6-object', () => {\n    return true &&\n        ['assign', 'is', 'getOwnPropertySymbols', 'setPrototypeOf'].every((name) => typeof global.Object[name] === 'function');\n}, true);\nadd('es2017-object', () => {\n    return ['values', 'entries', 'getOwnPropertyDescriptors'].every((name) => typeof global.Object[name] === 'function');\n}, true);\n/* Observable */\nadd('es-observable', () => typeof global.Observable !== 'undefined', true);\n/* Promise */\nadd('es6-promise', () => typeof global.Promise !== 'undefined' && true, true);\n/* Set */\nadd('es6-set', () => {\n    if (typeof global.Set === 'function') {\n        /* IE11 and older versions of Safari are missing critical ES6 Set functionality */\n        const set = new global.Set([1]);\n        return set.has(1) && 'keys' in set && typeof set.keys === 'function' && true;\n    }\n    return false;\n}, true);\n/* String */\nadd('es6-string', () => {\n    return ([\n        /* static methods */\n        'fromCodePoint'\n    ].every((key) => typeof global.String[key] === 'function') &&\n        [\n            /* instance methods */\n            'codePointAt',\n            'normalize',\n            'repeat',\n            'startsWith',\n            'endsWith',\n            'includes'\n        ].every((key) => typeof global.String.prototype[key] === 'function'));\n}, true);\nadd('es6-string-raw', () => {\n    function getCallSite(callSite, ...substitutions) {\n        const result = [...callSite];\n        result.raw = callSite.raw;\n        return result;\n    }\n    if ('raw' in global.String) {\n        let b = 1;\n        let callSite = getCallSite `a\\n${b}`;\n        callSite.raw = ['a\\\\n'];\n        const supportsTrunc = global.String.raw(callSite, 42) === 'a:\\\\n';\n        return supportsTrunc;\n    }\n    return false;\n}, true);\nadd('es2017-string', () => {\n    return ['padStart', 'padEnd'].every((key) => typeof global.String.prototype[key] === 'function');\n}, true);\n/* Symbol */\nadd('es6-symbol', () => typeof global.Symbol !== 'undefined' && typeof Symbol() === 'symbol', true);\n/* WeakMap */\nadd('es6-weakmap', () => {\n    if (typeof global.WeakMap !== 'undefined') {\n        /* IE11 and older versions of Safari are missing critical ES6 Map functionality */\n        const key1 = {};\n        const key2 = {};\n        const map = new global.WeakMap([[key1, 1]]);\n        Object.freeze(key1);\n        return map.get(key1) === 1 && map.set(key2, 2) === map && true;\n    }\n    return false;\n}, true);\n/* Miscellaneous features */\nadd('microtasks', () => true || false || true, true);\nadd('postmessage', () => {\n    // If window is undefined, and we have postMessage, it probably means we're in a web worker. Web workers have\n    // post message but it doesn't work how we expect it to, so it's best just to pretend it doesn't exist.\n    return typeof global.window !== 'undefined' && typeof global.postMessage === 'function';\n}, true);\nadd('raf', () => typeof global.requestAnimationFrame === 'function', true);\nadd('setimmediate', () => typeof global.setImmediate !== 'undefined', true);\n/* DOM Features */\nadd('dom-mutationobserver', () => {\n    if (true && Boolean(global.MutationObserver || global.WebKitMutationObserver)) {\n        // IE11 has an unreliable MutationObserver implementation where setProperty() does not\n        // generate a mutation event, observers can crash, and the queue does not drain\n        // reliably. The following feature test was adapted from\n        // https://gist.github.com/t10ko/4aceb8c71681fdb275e33efe5e576b14\n        const example = document.createElement('div');\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const observer = new HostMutationObserver(function () { });\n        observer.observe(example, { attributes: true });\n        example.style.setProperty('display', 'block');\n        return Boolean(observer.takeRecords().length);\n    }\n    return false;\n}, true);\nadd('dom-webanimation', () => true && global.Animation !== undefined && global.KeyframeEffect !== undefined, true);\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/support/has.mjs\n// module id = ./node_modules/@dojo/shim/support/has.mjs\n// module chunks = accordion-pane","import global from '../global';\nimport has from './has';\nfunction executeTask(item) {\n    if (item && item.isActive && item.callback) {\n        item.callback();\n    }\n}\nfunction getQueueHandle(item, destructor) {\n    return {\n        destroy: function () {\n            this.destroy = function () { };\n            item.isActive = false;\n            item.callback = null;\n            if (destructor) {\n                destructor();\n            }\n        }\n    };\n}\nlet checkMicroTaskQueue;\nlet microTasks;\n/**\n * Schedules a callback to the macrotask queue.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueTask = (function () {\n    let destructor;\n    let enqueue;\n    // Since the IE implementation of `setImmediate` is not flawless, we will test for `postMessage` first.\n    if (true) {\n        const queue = [];\n        global.addEventListener('message', function (event) {\n            // Confirm that the event was triggered by the current window and by this particular implementation.\n            if (event.source === global && event.data === 'dojo-queue-message') {\n                event.stopPropagation();\n                if (queue.length) {\n                    executeTask(queue.shift());\n                }\n            }\n        });\n        enqueue = function (item) {\n            queue.push(item);\n            global.postMessage('dojo-queue-message', '*');\n        };\n    }\n    else if (false) {\n        destructor = global.clearImmediate;\n        enqueue = function (item) {\n            return setImmediate(executeTask.bind(null, item));\n        };\n    }\n    else {\n        destructor = global.clearTimeout;\n        enqueue = function (item) {\n            return setTimeout(executeTask.bind(null, item), 0);\n        };\n    }\n    function queueTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const id = enqueue(item);\n        return getQueueHandle(item, destructor &&\n            function () {\n                destructor(id);\n            });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueTask(callback);\n        };\n})();\n// When no mechanism for registering microtasks is exposed by the environment, microtasks will\n// be queued and then executed in a single macrotask before the other macrotasks are executed.\nif (!true) {\n    let isMicroTaskQueued = false;\n    microTasks = [];\n    checkMicroTaskQueue = function () {\n        if (!isMicroTaskQueued) {\n            isMicroTaskQueued = true;\n            queueTask(function () {\n                isMicroTaskQueued = false;\n                if (microTasks.length) {\n                    let item;\n                    while ((item = microTasks.shift())) {\n                        executeTask(item);\n                    }\n                }\n            });\n        }\n    };\n}\n/**\n * Schedules an animation task with `window.requestAnimationFrame` if it exists, or with `queueTask` otherwise.\n *\n * Since requestAnimationFrame's behavior does not match that expected from `queueTask`, it is not used there.\n * However, at times it makes more sense to delegate to requestAnimationFrame; hence the following method.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueAnimationTask = (function () {\n    if (!true) {\n        return queueTask;\n    }\n    function queueAnimationTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const rafId = requestAnimationFrame(executeTask.bind(null, item));\n        return getQueueHandle(item, function () {\n            cancelAnimationFrame(rafId);\n        });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueAnimationTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueAnimationTask(callback);\n        };\n})();\n/**\n * Schedules a callback to the microtask queue.\n *\n * Any callbacks registered with `queueMicroTask` will be executed before the next macrotask. If no native\n * mechanism for scheduling macrotasks is exposed, then any callbacks will be fired before any macrotask\n * registered with `queueTask` or `queueAnimationTask`.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport let queueMicroTask = (function () {\n    let enqueue;\n    if (false) {\n        enqueue = function (item) {\n            global.process.nextTick(executeTask.bind(null, item));\n        };\n    }\n    else if (true) {\n        enqueue = function (item) {\n            global.Promise.resolve(item).then(executeTask);\n        };\n    }\n    else if (true) {\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const node = document.createElement('div');\n        const queue = [];\n        const observer = new HostMutationObserver(function () {\n            while (queue.length > 0) {\n                const item = queue.shift();\n                if (item && item.isActive && item.callback) {\n                    item.callback();\n                }\n            }\n        });\n        observer.observe(node, { attributes: true });\n        enqueue = function (item) {\n            queue.push(item);\n            node.setAttribute('queueStatus', '1');\n        };\n    }\n    else {\n        enqueue = function (item) {\n            checkMicroTaskQueue();\n            microTasks.push(item);\n        };\n    }\n    return function (callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        enqueue(item);\n        return getQueueHandle(item);\n    };\n})();\n//# sourceMappingURL=queue.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/support/queue.mjs\n// module id = ./node_modules/@dojo/shim/support/queue.mjs\n// module chunks = accordion-pane","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor(value, enumerable = false, writable = true, configurable = true) {\n    return {\n        value: value,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: configurable\n    };\n}\nexport function wrapNative(nativeFunction) {\n    return function (target, ...args) {\n        return nativeFunction.apply(target, args);\n    };\n}\n//# sourceMappingURL=util.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/support/util.mjs\n// module id = ./node_modules/@dojo/shim/support/util.mjs\n// module chunks = accordion-pane","import { Evented } from '@dojo/core/Evented';\nexport class Injector extends Evented {\n    constructor(payload) {\n        super();\n        this._payload = payload;\n    }\n    setInvalidator(invalidator) {\n        this._invalidator = invalidator;\n    }\n    get() {\n        return this._payload;\n    }\n    set(payload) {\n        this._payload = payload;\n        if (this._invalidator) {\n            this._invalidator();\n        }\n    }\n}\nexport default Injector;\n//# sourceMappingURL=Injector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/Injector.mjs\n// module id = ./node_modules/@dojo/widget-core/Injector.mjs\n// module chunks = accordion-pane","import { Evented } from '@dojo/core/Evented';\nimport Map from '@dojo/shim/Map';\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport var NodeEventType;\n(function (NodeEventType) {\n    NodeEventType[\"Projector\"] = \"Projector\";\n    NodeEventType[\"Widget\"] = \"Widget\";\n})(NodeEventType || (NodeEventType = {}));\nexport class NodeHandler extends Evented {\n    constructor() {\n        super(...arguments);\n        this._nodeMap = new Map();\n    }\n    get(key) {\n        return this._nodeMap.get(key);\n    }\n    has(key) {\n        return this._nodeMap.has(key);\n    }\n    add(element, key) {\n        this._nodeMap.set(key, element);\n        this.emit({ type: key });\n    }\n    addRoot() {\n        this.emit({ type: NodeEventType.Widget });\n    }\n    addProjector() {\n        this.emit({ type: NodeEventType.Projector });\n    }\n    clear() {\n        this._nodeMap.clear();\n    }\n}\nexport default NodeHandler;\n//# sourceMappingURL=NodeHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/NodeHandler.mjs\n// module id = ./node_modules/@dojo/widget-core/NodeHandler.mjs\n// module chunks = accordion-pane","import Promise from '@dojo/shim/Promise';\nimport Map from '@dojo/shim/Map';\nimport Symbol from '@dojo/shim/Symbol';\nimport { Evented } from '@dojo/core/Evented';\n/**\n * Widget base symbol type\n */\nexport const WIDGET_BASE_TYPE = Symbol('Widget Base');\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor(item) {\n    return Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\nexport function isWidgetConstructorDefaultExport(item) {\n    return Boolean(item &&\n        item.hasOwnProperty('__esModule') &&\n        item.hasOwnProperty('default') &&\n        isWidgetBaseConstructor(item.default));\n}\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented {\n    /**\n     * Emit loaded event for registry label\n     */\n    emitLoadedEvent(widgetLabel, item) {\n        this.emit({\n            type: widgetLabel,\n            action: 'loaded',\n            item\n        });\n    }\n    define(label, item) {\n        if (this._widgetRegistry === undefined) {\n            this._widgetRegistry = new Map();\n        }\n        if (this._widgetRegistry.has(label)) {\n            throw new Error(`widget has already been registered for '${label.toString()}'`);\n        }\n        this._widgetRegistry.set(label, item);\n        if (item instanceof Promise) {\n            item.then((widgetCtor) => {\n                this._widgetRegistry.set(label, widgetCtor);\n                this.emitLoadedEvent(label, widgetCtor);\n                return widgetCtor;\n            }, (error) => {\n                throw error;\n            });\n        }\n        else if (isWidgetBaseConstructor(item)) {\n            this.emitLoadedEvent(label, item);\n        }\n    }\n    defineInjector(label, injectorFactory) {\n        if (this._injectorRegistry === undefined) {\n            this._injectorRegistry = new Map();\n        }\n        if (this._injectorRegistry.has(label)) {\n            throw new Error(`injector has already been registered for '${label.toString()}'`);\n        }\n        const invalidator = new Evented();\n        const injectorItem = {\n            injector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n            invalidator\n        };\n        this._injectorRegistry.set(label, injectorItem);\n        this.emitLoadedEvent(label, injectorItem);\n    }\n    get(label) {\n        if (!this._widgetRegistry || !this.has(label)) {\n            return null;\n        }\n        const item = this._widgetRegistry.get(label);\n        if (isWidgetBaseConstructor(item)) {\n            return item;\n        }\n        if (item instanceof Promise) {\n            return null;\n        }\n        const promise = item();\n        this._widgetRegistry.set(label, promise);\n        promise.then((widgetCtor) => {\n            if (isWidgetConstructorDefaultExport(widgetCtor)) {\n                widgetCtor = widgetCtor.default;\n            }\n            this._widgetRegistry.set(label, widgetCtor);\n            this.emitLoadedEvent(label, widgetCtor);\n            return widgetCtor;\n        }, (error) => {\n            throw error;\n        });\n        return null;\n    }\n    getInjector(label) {\n        if (!this._injectorRegistry || !this.hasInjector(label)) {\n            return null;\n        }\n        return this._injectorRegistry.get(label);\n    }\n    has(label) {\n        return Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n    }\n    hasInjector(label) {\n        return Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n    }\n}\nexport default Registry;\n//# sourceMappingURL=Registry.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/Registry.mjs\n// module id = ./node_modules/@dojo/widget-core/Registry.mjs\n// module chunks = accordion-pane","import { Map } from '@dojo/shim/Map';\nimport { Evented } from '@dojo/core/Evented';\nimport { Registry } from './Registry';\nexport class RegistryHandler extends Evented {\n    constructor() {\n        super();\n        this._registry = new Registry();\n        this._registryWidgetLabelMap = new Map();\n        this._registryInjectorLabelMap = new Map();\n        this.own(this._registry);\n        const destroy = () => {\n            if (this.baseRegistry) {\n                this._registryWidgetLabelMap.delete(this.baseRegistry);\n                this._registryInjectorLabelMap.delete(this.baseRegistry);\n                this.baseRegistry = undefined;\n            }\n        };\n        this.own({ destroy });\n    }\n    set base(baseRegistry) {\n        if (this.baseRegistry) {\n            this._registryWidgetLabelMap.delete(this.baseRegistry);\n            this._registryInjectorLabelMap.delete(this.baseRegistry);\n        }\n        this.baseRegistry = baseRegistry;\n    }\n    define(label, widget) {\n        this._registry.define(label, widget);\n    }\n    defineInjector(label, injector) {\n        this._registry.defineInjector(label, injector);\n    }\n    has(label) {\n        return this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n    }\n    hasInjector(label) {\n        return this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n    }\n    get(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n    }\n    getInjector(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n    }\n    _get(label, globalPrecedence, getFunctionName, labelMap) {\n        const registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n        for (let i = 0; i < registries.length; i++) {\n            const registry = registries[i];\n            if (!registry) {\n                continue;\n            }\n            const item = registry[getFunctionName](label);\n            const registeredLabels = labelMap.get(registry) || [];\n            if (item) {\n                return item;\n            }\n            else if (registeredLabels.indexOf(label) === -1) {\n                const handle = registry.on(label, (event) => {\n                    if (event.action === 'loaded' &&\n                        this[getFunctionName](label, globalPrecedence) === event.item) {\n                        this.emit({ type: 'invalidate' });\n                    }\n                });\n                this.own(handle);\n                labelMap.set(registry, [...registeredLabels, label]);\n            }\n        }\n        return null;\n    }\n}\nexport default RegistryHandler;\n//# sourceMappingURL=RegistryHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/RegistryHandler.mjs\n// module id = ./node_modules/@dojo/widget-core/RegistryHandler.mjs\n// module chunks = accordion-pane","import Map from '@dojo/shim/Map';\nimport WeakMap from '@dojo/shim/WeakMap';\nimport Symbol from '@dojo/shim/Symbol';\nimport { v } from './d';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { widgetInstanceMap } from './vdom';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nconst decoratorMap = new Map();\nconst boundAuto = auto.bind(null);\nexport const noBind = Symbol.for('dojoNoBind');\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Indicates if it is the initial set properties cycle\n         */\n        this._initialProperties = true;\n        /**\n         * Array of property keys considered changed from the previous set properties\n         */\n        this._changedPropertyKeys = [];\n        this._nodeHandler = new NodeHandler();\n        this._handles = [];\n        this._children = [];\n        this._decoratorCache = new Map();\n        this._properties = {};\n        this._boundRenderFunc = this.render.bind(this);\n        this._boundInvalidate = this.invalidate.bind(this);\n        widgetInstanceMap.set(this, {\n            dirty: true,\n            onAttach: () => {\n                this.onAttach();\n            },\n            onDetach: () => {\n                this.onDetach();\n                this.destroy();\n            },\n            nodeHandler: this._nodeHandler,\n            registry: () => {\n                return this.registry;\n            },\n            coreProperties: {},\n            rendering: false,\n            inputProperties: {}\n        });\n        this._runAfterConstructors();\n    }\n    meta(MetaType) {\n        if (this._metaMap === undefined) {\n            this._metaMap = new Map();\n        }\n        let cached = this._metaMap.get(MetaType);\n        if (!cached) {\n            cached = new MetaType({\n                invalidate: this._boundInvalidate,\n                nodeHandler: this._nodeHandler,\n                bind: this\n            });\n            this.own(cached);\n            this._metaMap.set(MetaType, cached);\n        }\n        return cached;\n    }\n    onAttach() {\n        // Do nothing by default.\n    }\n    onDetach() {\n        // Do nothing by default.\n    }\n    get properties() {\n        return this._properties;\n    }\n    get changedPropertyKeys() {\n        return [...this._changedPropertyKeys];\n    }\n    __setCoreProperties__(coreProperties) {\n        const { baseRegistry } = coreProperties;\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData.coreProperties.baseRegistry !== baseRegistry) {\n            if (this._registry === undefined) {\n                this._registry = new RegistryHandler();\n                this.own(this._registry);\n                this.own(this._registry.on('invalidate', this._boundInvalidate));\n            }\n            this._registry.base = baseRegistry;\n            this.invalidate();\n        }\n        instanceData.coreProperties = coreProperties;\n    }\n    __setProperties__(originalProperties) {\n        const instanceData = widgetInstanceMap.get(this);\n        instanceData.inputProperties = originalProperties;\n        const properties = this._runBeforeProperties(originalProperties);\n        const registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n        const changedPropertyKeys = [];\n        const propertyNames = Object.keys(properties);\n        if (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n            const allProperties = [...propertyNames, ...Object.keys(this._properties)];\n            const checkedProperties = [];\n            const diffPropertyResults = {};\n            let runReactions = false;\n            for (let i = 0; i < allProperties.length; i++) {\n                const propertyName = allProperties[i];\n                if (checkedProperties.indexOf(propertyName) !== -1) {\n                    continue;\n                }\n                checkedProperties.push(propertyName);\n                const previousProperty = this._properties[propertyName];\n                const newProperty = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n                if (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n                    runReactions = true;\n                    const diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n                    for (let i = 0; i < diffFunctions.length; i++) {\n                        const result = diffFunctions[i](previousProperty, newProperty);\n                        if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                            changedPropertyKeys.push(propertyName);\n                        }\n                        if (propertyName in properties) {\n                            diffPropertyResults[propertyName] = result.value;\n                        }\n                    }\n                }\n                else {\n                    const result = boundAuto(previousProperty, newProperty);\n                    if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                        changedPropertyKeys.push(propertyName);\n                    }\n                    if (propertyName in properties) {\n                        diffPropertyResults[propertyName] = result.value;\n                    }\n                }\n            }\n            if (runReactions) {\n                this._mapDiffPropertyReactions(properties, changedPropertyKeys).forEach((args, reaction) => {\n                    if (args.changed) {\n                        reaction.call(this, args.previousProperties, args.newProperties);\n                    }\n                });\n            }\n            this._properties = diffPropertyResults;\n            this._changedPropertyKeys = changedPropertyKeys;\n        }\n        else {\n            this._initialProperties = false;\n            for (let i = 0; i < propertyNames.length; i++) {\n                const propertyName = propertyNames[i];\n                if (typeof properties[propertyName] === 'function') {\n                    properties[propertyName] = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n                }\n                else {\n                    changedPropertyKeys.push(propertyName);\n                }\n            }\n            this._changedPropertyKeys = changedPropertyKeys;\n            this._properties = Object.assign({}, properties);\n        }\n        if (this._changedPropertyKeys.length > 0) {\n            this.invalidate();\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    __setChildren__(children) {\n        if (this._children.length > 0 || children.length > 0) {\n            this._children = children;\n            this.invalidate();\n        }\n    }\n    __render__() {\n        const instanceData = widgetInstanceMap.get(this);\n        instanceData.dirty = false;\n        const render = this._runBeforeRenders();\n        let dNode = render();\n        dNode = this.runAfterRenders(dNode);\n        this._nodeHandler.clear();\n        return dNode;\n    }\n    invalidate() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData.invalidate) {\n            instanceData.invalidate();\n        }\n    }\n    render() {\n        return v('div', {}, this.children);\n    }\n    /**\n     * Function to add decorators to WidgetBase\n     *\n     * @param decoratorKey The key of the decorator\n     * @param value The value of the decorator\n     */\n    addDecorator(decoratorKey, value) {\n        value = Array.isArray(value) ? value : [value];\n        if (this.hasOwnProperty('constructor')) {\n            let decoratorList = decoratorMap.get(this.constructor);\n            if (!decoratorList) {\n                decoratorList = new Map();\n                decoratorMap.set(this.constructor, decoratorList);\n            }\n            let specificDecoratorList = decoratorList.get(decoratorKey);\n            if (!specificDecoratorList) {\n                specificDecoratorList = [];\n                decoratorList.set(decoratorKey, specificDecoratorList);\n            }\n            specificDecoratorList.push(...value);\n        }\n        else {\n            const decorators = this.getDecorator(decoratorKey);\n            this._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n        }\n    }\n    /**\n     * Function to build the list of decorators from the global decorator map.\n     *\n     * @param decoratorKey  The key of the decorator\n     * @return An array of decorator values\n     * @private\n     */\n    _buildDecoratorList(decoratorKey) {\n        const allDecorators = [];\n        let constructor = this.constructor;\n        while (constructor) {\n            const instanceMap = decoratorMap.get(constructor);\n            if (instanceMap) {\n                const decorators = instanceMap.get(decoratorKey);\n                if (decorators) {\n                    allDecorators.unshift(...decorators);\n                }\n            }\n            constructor = Object.getPrototypeOf(constructor);\n        }\n        return allDecorators;\n    }\n    /**\n     * Function to retrieve decorator values\n     *\n     * @param decoratorKey The key of the decorator\n     * @returns An array of decorator values\n     */\n    getDecorator(decoratorKey) {\n        let allDecorators = this._decoratorCache.get(decoratorKey);\n        if (allDecorators !== undefined) {\n            return allDecorators;\n        }\n        allDecorators = this._buildDecoratorList(decoratorKey);\n        this._decoratorCache.set(decoratorKey, allDecorators);\n        return allDecorators;\n    }\n    _mapDiffPropertyReactions(newProperties, changedPropertyKeys) {\n        const reactionFunctions = this.getDecorator('diffReaction');\n        return reactionFunctions.reduce((reactionPropertyMap, { reaction, propertyName }) => {\n            let reactionArguments = reactionPropertyMap.get(reaction);\n            if (reactionArguments === undefined) {\n                reactionArguments = {\n                    previousProperties: {},\n                    newProperties: {},\n                    changed: false\n                };\n            }\n            reactionArguments.previousProperties[propertyName] = this._properties[propertyName];\n            reactionArguments.newProperties[propertyName] = newProperties[propertyName];\n            if (changedPropertyKeys.indexOf(propertyName) !== -1) {\n                reactionArguments.changed = true;\n            }\n            reactionPropertyMap.set(reaction, reactionArguments);\n            return reactionPropertyMap;\n        }, new Map());\n    }\n    /**\n     * Binds unbound property functions to the specified `bind` property\n     *\n     * @param properties properties to check for functions\n     */\n    _bindFunctionProperty(property, bind) {\n        if (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n            if (this._bindFunctionPropertyMap === undefined) {\n                this._bindFunctionPropertyMap = new WeakMap();\n            }\n            const bindInfo = this._bindFunctionPropertyMap.get(property) || {};\n            let { boundFunc, scope } = bindInfo;\n            if (boundFunc === undefined || scope !== bind) {\n                boundFunc = property.bind(bind);\n                this._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n            }\n            return boundFunc;\n        }\n        return property;\n    }\n    get registry() {\n        if (this._registry === undefined) {\n            this._registry = new RegistryHandler();\n            this.own(this._registry);\n            this.own(this._registry.on('invalidate', this._boundInvalidate));\n        }\n        return this._registry;\n    }\n    _runBeforeProperties(properties) {\n        const beforeProperties = this.getDecorator('beforeProperties');\n        if (beforeProperties.length > 0) {\n            return beforeProperties.reduce((properties, beforePropertiesFunction) => {\n                return Object.assign({}, properties, beforePropertiesFunction.call(this, properties));\n            }, Object.assign({}, properties));\n        }\n        return properties;\n    }\n    /**\n     * Run all registered before renders and return the updated render method\n     */\n    _runBeforeRenders() {\n        const beforeRenders = this.getDecorator('beforeRender');\n        if (beforeRenders.length > 0) {\n            return beforeRenders.reduce((render, beforeRenderFunction) => {\n                const updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n                if (!updatedRender) {\n                    console.warn('Render function not returned from beforeRender, using previous render');\n                    return render;\n                }\n                return updatedRender;\n            }, this._boundRenderFunc);\n        }\n        return this._boundRenderFunc;\n    }\n    /**\n     * Run all registered after renders and return the decorated DNodes\n     *\n     * @param dNode The DNodes to run through the after renders\n     */\n    runAfterRenders(dNode) {\n        const afterRenders = this.getDecorator('afterRender');\n        if (afterRenders.length > 0) {\n            return afterRenders.reduce((dNode, afterRenderFunction) => {\n                return afterRenderFunction.call(this, dNode);\n            }, dNode);\n        }\n        if (this._metaMap !== undefined) {\n            this._metaMap.forEach((meta) => {\n                meta.afterRender();\n            });\n        }\n        return dNode;\n    }\n    _runAfterConstructors() {\n        const afterConstructors = this.getDecorator('afterConstructor');\n        if (afterConstructors.length > 0) {\n            afterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n        }\n    }\n    own(handle) {\n        this._handles.push(handle);\n    }\n    destroy() {\n        while (this._handles.length > 0) {\n            const handle = this._handles.pop();\n            if (handle) {\n                handle.destroy();\n            }\n        }\n    }\n}\n/**\n * static identifier\n */\nWidgetBase._type = WIDGET_BASE_TYPE;\nexport default WidgetBase;\n//# sourceMappingURL=WidgetBase.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/WidgetBase.mjs\n// module id = ./node_modules/@dojo/widget-core/WidgetBase.mjs\n// module chunks = accordion-pane","let browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\nfunction determineBrowserStyleNames(element) {\n    if ('WebkitTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n        browserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n    }\n    else if ('transition' in element.style || 'MozTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'transitionend';\n        browserSpecificAnimationEndEventName = 'animationend';\n    }\n    else {\n        throw new Error('Your browser is not supported');\n    }\n}\nfunction initialize(element) {\n    if (browserSpecificAnimationEndEventName === '') {\n        determineBrowserStyleNames(element);\n    }\n}\nfunction runAndCleanUp(element, startAnimation, finishAnimation) {\n    initialize(element);\n    let finished = false;\n    let transitionEnd = function () {\n        if (!finished) {\n            finished = true;\n            element.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n            element.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n            finishAnimation();\n        }\n    };\n    startAnimation();\n    element.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n    element.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\nfunction exit(node, properties, exitAnimation, removeNode) {\n    const activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(exitAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        removeNode();\n    });\n}\nfunction enter(node, properties, enterAnimation) {\n    const activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(enterAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        node.classList.remove(enterAnimation);\n        node.classList.remove(activeClass);\n    });\n}\nexport default {\n    enter,\n    exit\n};\n//# sourceMappingURL=cssTransitions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/animations/cssTransitions.mjs\n// module id = ./node_modules/@dojo/widget-core/animations/cssTransitions.mjs\n// module chunks = accordion-pane","import Symbol from '@dojo/shim/Symbol';\n/**\n * The symbol identifier for a WNode type\n */\nexport const WNODE = Symbol('Identifier for a WNode.');\n/**\n * The symbol identifier for a VNode type\n */\nexport const VNODE = Symbol('Identifier for a VNode.');\n/**\n * The symbol identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = Symbol('Identifier for a VNode created using existing dom.');\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === WNODE);\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child) {\n    return Boolean(child && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE));\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === DOMVNODE);\n}\nexport function isElementNode(value) {\n    return !!value.tagName;\n}\nexport function decorate(dNodes, optionsOrModifier, predicate) {\n    let shallow = false;\n    let modifier;\n    if (typeof optionsOrModifier === 'function') {\n        modifier = optionsOrModifier;\n    }\n    else {\n        modifier = optionsOrModifier.modifier;\n        predicate = optionsOrModifier.predicate;\n        shallow = optionsOrModifier.shallow || false;\n    }\n    let nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n    function breaker() {\n        nodes = [];\n    }\n    while (nodes.length) {\n        const node = nodes.shift();\n        if (node) {\n            if (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n                nodes = [...nodes, ...node.children];\n            }\n            if (!predicate || predicate(node)) {\n                modifier(node, breaker);\n            }\n        }\n    }\n    return dNodes;\n}\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w(widgetConstructor, properties, children = []) {\n    return {\n        children,\n        widgetConstructor,\n        properties,\n        type: WNODE\n    };\n}\nexport function v(tag, propertiesOrChildren = {}, children = undefined) {\n    let properties = propertiesOrChildren;\n    let deferredPropertiesCallback;\n    if (Array.isArray(propertiesOrChildren)) {\n        children = propertiesOrChildren;\n        properties = {};\n    }\n    if (typeof properties === 'function') {\n        deferredPropertiesCallback = properties;\n        properties = {};\n    }\n    return {\n        tag,\n        deferredPropertiesCallback,\n        children,\n        properties,\n        type: VNODE\n    };\n}\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom({ node, attrs = {}, props = {}, on = {}, diffType = 'none' }, children) {\n    return {\n        tag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n        properties: props,\n        attributes: attrs,\n        events: on,\n        children,\n        type: DOMVNODE,\n        domNode: node,\n        text: isElementNode(node) ? undefined : node.data,\n        diffType\n    };\n}\n//# sourceMappingURL=d.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/d.mjs\n// module id = ./node_modules/@dojo/widget-core/d.mjs\n// module chunks = accordion-pane","import { handleDecorator } from './handleDecorator';\nexport function afterRender(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('afterRender', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default afterRender;\n//# sourceMappingURL=afterRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/afterRender.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/afterRender.mjs\n// module chunks = accordion-pane","import { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nexport function alwaysRender() {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function () {\n            this.invalidate();\n        })(target);\n    });\n}\nexport default alwaysRender;\n//# sourceMappingURL=alwaysRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/alwaysRender.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/alwaysRender.mjs\n// module chunks = accordion-pane","import { handleDecorator } from './handleDecorator';\nexport function beforeProperties(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default beforeProperties;\n//# sourceMappingURL=beforeProperties.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/beforeProperties.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/beforeProperties.mjs\n// module chunks = accordion-pane","import { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement({ tag, properties = [], attributes = [], events = [], childType = CustomElementChildType.DOJO, registryFactory = () => new Registry() }) {\n    return function (target) {\n        target.prototype.__customElementDescriptor = {\n            tagName: tag,\n            attributes,\n            properties,\n            events,\n            childType,\n            registryFactory\n        };\n    };\n}\nexport default customElement;\n//# sourceMappingURL=customElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/customElement.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/customElement.mjs\n// module chunks = accordion-pane","import { handleDecorator } from './handleDecorator';\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(propertyName, diffFunction, reactionFunction) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n        target.addDecorator('registeredDiffProperty', propertyName);\n        if (reactionFunction || propertyKey) {\n            target.addDecorator('diffReaction', {\n                propertyName,\n                reaction: propertyKey ? target[propertyKey] : reactionFunction\n            });\n        }\n    });\n}\nexport default diffProperty;\n//# sourceMappingURL=diffProperty.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/diffProperty.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/diffProperty.mjs\n// module chunks = accordion-pane","/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler) {\n    return function (target, propertyKey, descriptor) {\n        if (typeof target === 'function') {\n            handler(target.prototype, undefined);\n        }\n        else {\n            handler(target, propertyKey);\n        }\n    };\n}\nexport default handleDecorator;\n//# sourceMappingURL=handleDecorator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/handleDecorator.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/handleDecorator.mjs\n// module chunks = accordion-pane","import WeakMap from '@dojo/shim/WeakMap';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap = new WeakMap();\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }) {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function (properties) {\n            const injectorItem = this.registry.getInjector(name);\n            if (injectorItem) {\n                const { injector, invalidator } = injectorItem;\n                const registeredInjectors = registeredInjectorsMap.get(this) || [];\n                if (registeredInjectors.length === 0) {\n                    registeredInjectorsMap.set(this, registeredInjectors);\n                }\n                if (registeredInjectors.indexOf(injectorItem) === -1) {\n                    this.own(invalidator.on('invalidate', () => {\n                        this.invalidate();\n                    }));\n                    registeredInjectors.push(injectorItem);\n                }\n                return getProperties(injector(), properties);\n            }\n        })(target);\n    });\n}\nexport default inject;\n//# sourceMappingURL=inject.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/inject.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/inject.mjs\n// module chunks = accordion-pane","import { WIDGET_BASE_TYPE } from './Registry';\nfunction isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\nexport function always(previousProperty, newProperty) {\n    return {\n        changed: true,\n        value: newProperty\n    };\n}\nexport function ignore(previousProperty, newProperty) {\n    return {\n        changed: false,\n        value: newProperty\n    };\n}\nexport function reference(previousProperty, newProperty) {\n    return {\n        changed: previousProperty !== newProperty,\n        value: newProperty\n    };\n}\nexport function shallow(previousProperty, newProperty) {\n    let changed = false;\n    const validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n    const validNewProperty = newProperty && isObjectOrArray(newProperty);\n    if (!validOldProperty || !validNewProperty) {\n        return {\n            changed: true,\n            value: newProperty\n        };\n    }\n    const previousKeys = Object.keys(previousProperty);\n    const newKeys = Object.keys(newProperty);\n    if (previousKeys.length !== newKeys.length) {\n        changed = true;\n    }\n    else {\n        changed = newKeys.some((key) => {\n            return newProperty[key] !== previousProperty[key];\n        });\n    }\n    return {\n        changed,\n        value: newProperty\n    };\n}\nexport function auto(previousProperty, newProperty) {\n    let result;\n    if (typeof newProperty === 'function') {\n        if (newProperty._type === WIDGET_BASE_TYPE) {\n            result = reference(previousProperty, newProperty);\n        }\n        else {\n            result = ignore(previousProperty, newProperty);\n        }\n    }\n    else if (isObjectOrArray(newProperty)) {\n        result = shallow(previousProperty, newProperty);\n    }\n    else {\n        result = reference(previousProperty, newProperty);\n    }\n    return result;\n}\n//# sourceMappingURL=diff.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/diff.mjs\n// module id = ./node_modules/@dojo/widget-core/diff.mjs\n// module chunks = accordion-pane","import * as tslib_1 from \"tslib\";\nimport { assign } from '@dojo/core/lang';\nimport cssTransitions from '../animations/cssTransitions';\nimport { afterRender } from './../decorators/afterRender';\nimport { v } from './../d';\nimport { dom } from './../vdom';\n/**\n * Represents the attach state of the projector\n */\nexport var ProjectorAttachState;\n(function (ProjectorAttachState) {\n    ProjectorAttachState[ProjectorAttachState[\"Attached\"] = 1] = \"Attached\";\n    ProjectorAttachState[ProjectorAttachState[\"Detached\"] = 2] = \"Detached\";\n})(ProjectorAttachState || (ProjectorAttachState = {}));\n/**\n * Attach type for the projector\n */\nexport var AttachType;\n(function (AttachType) {\n    AttachType[AttachType[\"Append\"] = 1] = \"Append\";\n    AttachType[AttachType[\"Merge\"] = 2] = \"Merge\";\n})(AttachType || (AttachType = {}));\nexport function ProjectorMixin(Base) {\n    class Projector extends Base {\n        constructor(...args) {\n            super(...args);\n            this._root = document.body;\n            this._async = true;\n            this._projectorProperties = {};\n            this._projectionOptions = {\n                transitions: cssTransitions\n            };\n            this.root = document.body;\n            this.projectorState = ProjectorAttachState.Detached;\n        }\n        append(root) {\n            const options = {\n                type: AttachType.Append,\n                root\n            };\n            return this._attach(options);\n        }\n        merge(root) {\n            const options = {\n                type: AttachType.Merge,\n                root\n            };\n            return this._attach(options);\n        }\n        set root(root) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot change root element');\n            }\n            this._root = root;\n        }\n        get root() {\n            return this._root;\n        }\n        get async() {\n            return this._async;\n        }\n        set async(async) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot change async mode');\n            }\n            this._async = async;\n        }\n        sandbox(doc = document) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot create sandbox');\n            }\n            this._async = false;\n            const previousRoot = this.root;\n            /* free up the document fragment for GC */\n            this.own({\n                destroy: () => {\n                    this._root = previousRoot;\n                }\n            });\n            this._attach({\n                /* DocumentFragment is not assignable to Element, but provides everything needed to work */\n                root: doc.createDocumentFragment(),\n                type: AttachType.Append\n            });\n        }\n        setChildren(children) {\n            this.__setChildren__(children);\n        }\n        setProperties(properties) {\n            this.__setProperties__(properties);\n        }\n        __setProperties__(properties) {\n            if (this._projectorProperties && this._projectorProperties.registry !== properties.registry) {\n                if (this._projectorProperties.registry) {\n                    this._projectorProperties.registry.destroy();\n                }\n            }\n            this._projectorProperties = assign({}, properties);\n            super.__setCoreProperties__({ bind: this, baseRegistry: properties.registry });\n            super.__setProperties__(properties);\n        }\n        toHtml() {\n            if (this.projectorState !== ProjectorAttachState.Attached || !this._projection) {\n                throw new Error('Projector is not attached, cannot return an HTML string of projection.');\n            }\n            return this._projection.domNode.childNodes[0].outerHTML;\n        }\n        afterRender(result) {\n            let node = result;\n            if (typeof result === 'string' || result === null || result === undefined) {\n                node = v('span', {}, [result]);\n            }\n            return node;\n        }\n        destroy() {\n            super.destroy();\n        }\n        _attach({ type, root }) {\n            if (root) {\n                this.root = root;\n            }\n            if (this._attachHandle) {\n                return this._attachHandle;\n            }\n            this.projectorState = ProjectorAttachState.Attached;\n            const handle = {\n                destroy: () => {\n                    if (this.projectorState === ProjectorAttachState.Attached) {\n                        this._projection = undefined;\n                        this.projectorState = ProjectorAttachState.Detached;\n                    }\n                }\n            };\n            this.own(handle);\n            this._attachHandle = handle;\n            this._projectionOptions = Object.assign({}, this._projectionOptions, { sync: !this._async });\n            switch (type) {\n                case AttachType.Append:\n                    this._projection = dom.append(this.root, this, this._projectionOptions);\n                    break;\n                case AttachType.Merge:\n                    this._projection = dom.merge(this.root, this, this._projectionOptions);\n                    break;\n            }\n            return this._attachHandle;\n        }\n    }\n    tslib_1.__decorate([\n        afterRender(),\n        tslib_1.__metadata(\"design:type\", Function),\n        tslib_1.__metadata(\"design:paramtypes\", [Object]),\n        tslib_1.__metadata(\"design:returntype\", void 0)\n    ], Projector.prototype, \"afterRender\", null);\n    return Projector;\n}\nexport default ProjectorMixin;\n//# sourceMappingURL=Projector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/mixins/Projector.mjs\n// module id = ./node_modules/@dojo/widget-core/mixins/Projector.mjs\n// module chunks = accordion-pane","import * as tslib_1 from \"tslib\";\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\nconst THEME_KEY = ' _key';\nexport const INJECTED_THEME_KEY = Symbol('theme');\n/**\n * Decorator for base css classes\n */\nexport function theme(theme) {\n    return handleDecorator((target) => {\n        target.addDecorator('baseThemeClasses', theme);\n    });\n}\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes) {\n    return classes.reduce((currentClassNames, baseClass) => {\n        Object.keys(baseClass).forEach((key) => {\n            currentClassNames[baseClass[key]] = key;\n        });\n        return currentClassNames;\n    }, {});\n}\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme, themeRegistry) {\n    const themeInjector = new Injector(theme);\n    themeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n        themeInjector.setInvalidator(invalidator);\n        return () => themeInjector.get();\n    });\n    return themeInjector;\n}\n/**\n * Function that returns a class decorated with with Themed functionality\n */\nexport function ThemedMixin(Base) {\n    let Themed = class Themed extends Base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Registered base theme keys\n             */\n            this._registeredBaseThemeKeys = [];\n            /**\n             * Indicates if classes meta data need to be calculated.\n             */\n            this._recalculateClasses = true;\n            /**\n             * Loaded theme\n             */\n            this._theme = {};\n        }\n        theme(classes) {\n            if (this._recalculateClasses) {\n                this._recalculateThemeClasses();\n            }\n            if (Array.isArray(classes)) {\n                return classes.map((className) => this._getThemeClass(className));\n            }\n            return this._getThemeClass(classes);\n        }\n        /**\n         * Function fired when `theme` or `extraClasses` are changed.\n         */\n        onPropertiesChanged() {\n            this._recalculateClasses = true;\n        }\n        _getThemeClass(className) {\n            if (className === undefined || className === null) {\n                return className;\n            }\n            const extraClasses = this.properties.extraClasses || {};\n            const themeClassName = this._baseThemeClassesReverseLookup[className];\n            let resultClassNames = [];\n            if (!themeClassName) {\n                console.warn(`Class name: '${className}' not found in theme`);\n                return null;\n            }\n            if (extraClasses[themeClassName]) {\n                resultClassNames.push(extraClasses[themeClassName]);\n            }\n            if (this._theme[themeClassName]) {\n                resultClassNames.push(this._theme[themeClassName]);\n            }\n            else {\n                resultClassNames.push(this._registeredBaseTheme[themeClassName]);\n            }\n            return resultClassNames.join(' ');\n        }\n        _recalculateThemeClasses() {\n            const { theme = {} } = this.properties;\n            const baseThemes = this.getDecorator('baseThemeClasses');\n            if (!this._registeredBaseTheme) {\n                this._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n                    const _a = THEME_KEY, key = baseTheme[_a], classes = tslib_1.__rest(baseTheme, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n                    this._registeredBaseThemeKeys.push(key);\n                    return Object.assign({}, finalBaseTheme, classes);\n                }, {});\n                this._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n            }\n            this._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n                return Object.assign({}, baseTheme, theme[themeKey]);\n            }, {});\n            this._recalculateClasses = false;\n        }\n    };\n    tslib_1.__decorate([\n        diffProperty('theme', shallow),\n        diffProperty('extraClasses', shallow),\n        tslib_1.__metadata(\"design:type\", Function),\n        tslib_1.__metadata(\"design:paramtypes\", []),\n        tslib_1.__metadata(\"design:returntype\", void 0)\n    ], Themed.prototype, \"onPropertiesChanged\", null);\n    Themed = tslib_1.__decorate([\n        inject({\n            name: INJECTED_THEME_KEY,\n            getProperties: (theme, properties) => {\n                if (!properties.theme) {\n                    return { theme };\n                }\n                return {};\n            }\n        })\n    ], Themed);\n    return Themed;\n}\nexport default ThemedMixin;\n//# sourceMappingURL=Themed.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/mixins/Themed.mjs\n// module id = ./node_modules/@dojo/widget-core/mixins/Themed.mjs\n// module chunks = accordion-pane","import * as tslib_1 from \"tslib\";\nimport { WidgetBase, noBind } from './WidgetBase';\nimport { ProjectorMixin } from './mixins/Projector';\nimport { from } from '@dojo/shim/array';\nimport { w, dom } from './d';\nimport global from '@dojo/shim/global';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\nexport var CustomElementChildType;\n(function (CustomElementChildType) {\n    CustomElementChildType[\"DOJO\"] = \"DOJO\";\n    CustomElementChildType[\"NODE\"] = \"NODE\";\n    CustomElementChildType[\"TEXT\"] = \"TEXT\";\n})(CustomElementChildType || (CustomElementChildType = {}));\nexport function DomToWidgetWrapper(domNode) {\n    let DomToWidgetWrapper = class DomToWidgetWrapper extends WidgetBase {\n        render() {\n            const properties = Object.keys(this.properties).reduce((props, key) => {\n                const value = this.properties[key];\n                if (key.indexOf('on') === 0) {\n                    key = `__${key}`;\n                }\n                props[key] = value;\n                return props;\n            }, {});\n            return dom({ node: domNode, props: properties, diffType: 'dom' });\n        }\n        static get domNode() {\n            return domNode;\n        }\n    };\n    DomToWidgetWrapper = tslib_1.__decorate([\n        alwaysRender()\n    ], DomToWidgetWrapper);\n    return DomToWidgetWrapper;\n}\nexport function create(descriptor, WidgetConstructor) {\n    const { attributes, childType, registryFactory } = descriptor;\n    const attributeMap = {};\n    attributes.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    return class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._properties = {};\n            this._children = [];\n            this._eventProperties = {};\n            this._initialised = false;\n        }\n        connectedCallback() {\n            if (this._initialised) {\n                return;\n            }\n            const domProperties = {};\n            const { attributes, properties, events } = descriptor;\n            this._properties = Object.assign({}, this._properties, this._attributesToProperties(attributes));\n            [...attributes, ...properties].forEach((propertyName) => {\n                const value = this[propertyName];\n                const filteredPropertyName = propertyName.replace(/^on/, '__');\n                if (value !== undefined) {\n                    this._properties[propertyName] = value;\n                }\n                if (filteredPropertyName !== propertyName) {\n                    domProperties[filteredPropertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n                domProperties[propertyName] = {\n                    get: () => this._getProperty(propertyName),\n                    set: (value) => this._setProperty(propertyName, value)\n                };\n            });\n            events.forEach((propertyName) => {\n                const eventName = propertyName.replace(/^on/, '').toLowerCase();\n                const filteredPropertyName = propertyName.replace(/^on/, '__on');\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getEventProperty(propertyName),\n                    set: (value) => this._setEventProperty(propertyName, value)\n                };\n                this._eventProperties[propertyName] = undefined;\n                this._properties[propertyName] = (...args) => {\n                    const eventCallback = this._getEventProperty(propertyName);\n                    if (typeof eventCallback === 'function') {\n                        eventCallback(...args);\n                    }\n                    this.dispatchEvent(new CustomEvent(eventName, {\n                        bubbles: false,\n                        detail: args\n                    }));\n                };\n            });\n            Object.defineProperties(this, domProperties);\n            const children = childType === CustomElementChildType.TEXT ? this.childNodes : this.children;\n            from(children).forEach((childNode) => {\n                if (childType === CustomElementChildType.DOJO) {\n                    childNode.addEventListener('dojo-ce-render', () => this._render());\n                    childNode.addEventListener('dojo-ce-connected', () => this._render());\n                    this._children.push(DomToWidgetWrapper(childNode));\n                }\n                else {\n                    this._children.push(dom({ node: childNode, diffType: 'dom' }));\n                }\n            });\n            this.addEventListener('dojo-ce-connected', (e) => this._childConnected(e));\n            const widgetProperties = this._properties;\n            const renderChildren = () => this.__children__();\n            const Wrapper = class extends WidgetBase {\n                render() {\n                    return w(WidgetConstructor, widgetProperties, renderChildren());\n                }\n            };\n            const registry = registryFactory();\n            const themeContext = registerThemeInjector(this._getTheme(), registry);\n            global.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n            const Projector = ProjectorMixin(Wrapper);\n            this._projector = new Projector();\n            this._projector.setProperties({ registry });\n            this._projector.append(this);\n            this._initialised = true;\n            this.dispatchEvent(new CustomEvent('dojo-ce-connected', {\n                bubbles: true,\n                detail: this\n            }));\n        }\n        _getTheme() {\n            if (global && global.dojoce && global.dojoce.theme) {\n                return global.dojoce.themes[global.dojoce.theme];\n            }\n        }\n        _childConnected(e) {\n            const node = e.detail;\n            if (node.parentNode === this) {\n                const exists = this._children.some((child) => child.domNode === node);\n                if (!exists) {\n                    node.addEventListener('dojo-ce-render', () => this._render());\n                    this._children.push(DomToWidgetWrapper(node));\n                    this._render();\n                }\n            }\n        }\n        _render() {\n            if (this._projector) {\n                this._projector.invalidate();\n                this.dispatchEvent(new CustomEvent('dojo-ce-render', {\n                    bubbles: false,\n                    detail: this\n                }));\n            }\n        }\n        __properties__() {\n            return Object.assign({}, this._properties, this._eventProperties);\n        }\n        __children__() {\n            if (childType === CustomElementChildType.DOJO) {\n                return this._children.filter((Child) => Child.domNode.isWidget).map((Child) => {\n                    const { domNode } = Child;\n                    return w(Child, Object.assign({}, domNode.__properties__()), [...domNode.__children__()]);\n                });\n            }\n            else {\n                return this._children;\n            }\n        }\n        attributeChangedCallback(name, oldValue, value) {\n            const propertyName = attributeMap[name];\n            this._setProperty(propertyName, value);\n        }\n        _setEventProperty(propertyName, value) {\n            this._eventProperties[propertyName] = value;\n        }\n        _getEventProperty(propertyName) {\n            return this._eventProperties[propertyName];\n        }\n        _setProperty(propertyName, value) {\n            if (typeof value === 'function') {\n                value[noBind] = true;\n            }\n            this._properties[propertyName] = value;\n            this._render();\n        }\n        _getProperty(propertyName) {\n            return this._properties[propertyName];\n        }\n        _attributesToProperties(attributes) {\n            return attributes.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    properties[propertyName] = value;\n                }\n                return properties;\n            }, {});\n        }\n        static get observedAttributes() {\n            return Object.keys(attributeMap);\n        }\n        get isWidget() {\n            return true;\n        }\n    };\n}\nexport function register(WidgetConstructor) {\n    const descriptor = WidgetConstructor.prototype && WidgetConstructor.prototype.__customElementDescriptor;\n    if (!descriptor) {\n        throw new Error('Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?');\n    }\n    global.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\nexport default register;\n//# sourceMappingURL=registerCustomElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/registerCustomElement.mjs\n// module id = ./node_modules/@dojo/widget-core/registerCustomElement.mjs\n// module chunks = accordion-pane","import global from '@dojo/shim/global';\nimport { from as arrayFrom } from '@dojo/shim/array';\nimport { isWNode, isVNode, isDomVNode, VNODE, WNODE } from './d';\nimport { isWidgetBaseConstructor } from './Registry';\nimport WeakMap from '@dojo/shim/WeakMap';\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst emptyArray = [];\nexport const widgetInstanceMap = new WeakMap();\nconst instanceMap = new WeakMap();\nconst projectorStateMap = new WeakMap();\nfunction same(dnode1, dnode2) {\n    if (isVNode(dnode1) && isVNode(dnode2)) {\n        if (isDomVNode(dnode1) || isDomVNode(dnode2)) {\n            if (dnode1.domNode !== dnode2.domNode) {\n                return false;\n            }\n        }\n        if (dnode1.tag !== dnode2.tag) {\n            return false;\n        }\n        if (dnode1.properties.key !== dnode2.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    else if (isWNode(dnode1) && isWNode(dnode2)) {\n        if (dnode1.instance === undefined && typeof dnode2.widgetConstructor === 'string') {\n            return false;\n        }\n        if (dnode1.widgetConstructor !== dnode2.widgetConstructor) {\n            return false;\n        }\n        if (dnode1.properties.key !== dnode2.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\nconst missingTransition = function () {\n    throw new Error('Provide a transitions object to the projectionOptions to do animations');\n};\nfunction getProjectionOptions(projectorOptions, projectorInstance) {\n    const defaults = {\n        namespace: undefined,\n        styleApplyer: function (domNode, styleName, value) {\n            domNode.style[styleName] = value;\n        },\n        transitions: {\n            enter: missingTransition,\n            exit: missingTransition\n        },\n        depth: 0,\n        merge: false,\n        sync: false,\n        projectorInstance\n    };\n    return Object.assign({}, defaults, projectorOptions);\n}\nfunction checkStyleValue(styleValue) {\n    if (typeof styleValue !== 'string') {\n        throw new Error('Style values must be strings');\n    }\n}\nfunction updateEvent(domNode, eventName, currentValue, projectionOptions, bind, previousValue) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    const eventMap = projectorState.nodeMap.get(domNode) || new WeakMap();\n    if (previousValue) {\n        const previousEvent = eventMap.get(previousValue);\n        domNode.removeEventListener(eventName, previousEvent);\n    }\n    let callback = currentValue.bind(bind);\n    if (eventName === 'input') {\n        callback = function (evt) {\n            currentValue.call(this, evt);\n            evt.target['oninput-value'] = evt.target.value;\n        }.bind(bind);\n    }\n    domNode.addEventListener(eventName, callback);\n    eventMap.set(currentValue, callback);\n    projectorState.nodeMap.set(domNode, eventMap);\n}\nfunction addClasses(domNode, classes) {\n    if (classes) {\n        const classNames = classes.split(' ');\n        for (let i = 0; i < classNames.length; i++) {\n            domNode.classList.add(classNames[i]);\n        }\n    }\n}\nfunction removeClasses(domNode, classes) {\n    if (classes) {\n        const classNames = classes.split(' ');\n        for (let i = 0; i < classNames.length; i++) {\n            domNode.classList.remove(classNames[i]);\n        }\n    }\n}\nfunction buildPreviousProperties(domNode, previous, current) {\n    const { diffType, properties, attributes } = current;\n    if (!diffType || diffType === 'vdom') {\n        return { properties: previous.properties, attributes: previous.attributes, events: previous.events };\n    }\n    else if (diffType === 'none') {\n        return { properties: {}, attributes: previous.attributes ? {} : undefined, events: previous.events };\n    }\n    let newProperties = {\n        properties: {}\n    };\n    if (attributes) {\n        newProperties.attributes = {};\n        newProperties.events = previous.events;\n        Object.keys(properties).forEach((propName) => {\n            newProperties.properties[propName] = domNode[propName];\n        });\n        Object.keys(attributes).forEach((attrName) => {\n            newProperties.attributes[attrName] = domNode.getAttribute(attrName);\n        });\n        return newProperties;\n    }\n    newProperties.properties = Object.keys(properties).reduce((props, property) => {\n        props[property] = domNode.getAttribute(property) || domNode[property];\n        return props;\n    }, {});\n    return newProperties;\n}\nfunction focusNode(propValue, previousValue, domNode, projectionOptions) {\n    let result;\n    if (typeof propValue === 'function') {\n        result = propValue();\n    }\n    else {\n        result = propValue && !previousValue;\n    }\n    if (result === true) {\n        const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n        projectorState.deferredRenderCallbacks.push(() => {\n            domNode.focus();\n        });\n    }\n}\nfunction removeOrphanedEvents(domNode, previousProperties, properties, projectionOptions, onlyEvents = false) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    const eventMap = projectorState.nodeMap.get(domNode);\n    if (eventMap) {\n        Object.keys(previousProperties).forEach((propName) => {\n            const isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n            const eventName = onlyEvents ? propName : propName.substr(2);\n            if (isEvent && !properties[propName]) {\n                const eventCallback = eventMap.get(previousProperties[propName]);\n                if (eventCallback) {\n                    domNode.removeEventListener(eventName, eventCallback);\n                }\n            }\n        });\n    }\n}\nfunction updateAttribute(domNode, attrName, attrValue, projectionOptions) {\n    if (projectionOptions.namespace === NAMESPACE_SVG && attrName === 'href') {\n        domNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n    }\n    else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n        domNode.removeAttribute(attrName);\n    }\n    else {\n        domNode.setAttribute(attrName, attrValue);\n    }\n}\nfunction updateAttributes(domNode, previousAttributes, attributes, projectionOptions) {\n    const attrNames = Object.keys(attributes);\n    const attrCount = attrNames.length;\n    for (let i = 0; i < attrCount; i++) {\n        const attrName = attrNames[i];\n        const attrValue = attributes[attrName];\n        const previousAttrValue = previousAttributes[attrName];\n        if (attrValue !== previousAttrValue) {\n            updateAttribute(domNode, attrName, attrValue, projectionOptions);\n        }\n    }\n}\nfunction updateProperties(domNode, previousProperties, properties, projectionOptions, includesEventsAndAttributes = true) {\n    let propertiesUpdated = false;\n    const propNames = Object.keys(properties);\n    const propCount = propNames.length;\n    if (propNames.indexOf('classes') === -1 && previousProperties.classes) {\n        if (Array.isArray(previousProperties.classes)) {\n            for (let i = 0; i < previousProperties.classes.length; i++) {\n                removeClasses(domNode, previousProperties.classes[i]);\n            }\n        }\n        else {\n            removeClasses(domNode, previousProperties.classes);\n        }\n    }\n    includesEventsAndAttributes && removeOrphanedEvents(domNode, previousProperties, properties, projectionOptions);\n    for (let i = 0; i < propCount; i++) {\n        const propName = propNames[i];\n        let propValue = properties[propName];\n        const previousValue = previousProperties[propName];\n        if (propName === 'classes') {\n            const previousClasses = Array.isArray(previousValue) ? previousValue : [previousValue];\n            const currentClasses = Array.isArray(propValue) ? propValue : [propValue];\n            if (previousClasses && previousClasses.length > 0) {\n                if (!propValue || propValue.length === 0) {\n                    for (let i = 0; i < previousClasses.length; i++) {\n                        removeClasses(domNode, previousClasses[i]);\n                    }\n                }\n                else {\n                    const newClasses = [...currentClasses];\n                    for (let i = 0; i < previousClasses.length; i++) {\n                        const previousClassName = previousClasses[i];\n                        if (previousClassName) {\n                            const classIndex = newClasses.indexOf(previousClassName);\n                            if (classIndex === -1) {\n                                removeClasses(domNode, previousClassName);\n                            }\n                            else {\n                                newClasses.splice(classIndex, 1);\n                            }\n                        }\n                    }\n                    for (let i = 0; i < newClasses.length; i++) {\n                        addClasses(domNode, newClasses[i]);\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < currentClasses.length; i++) {\n                    addClasses(domNode, currentClasses[i]);\n                }\n            }\n        }\n        else if (propName === 'focus') {\n            focusNode(propValue, previousValue, domNode, projectionOptions);\n        }\n        else if (propName === 'styles') {\n            const styleNames = Object.keys(propValue);\n            const styleCount = styleNames.length;\n            for (let j = 0; j < styleCount; j++) {\n                const styleName = styleNames[j];\n                const newStyleValue = propValue[styleName];\n                const oldStyleValue = previousValue && previousValue[styleName];\n                if (newStyleValue === oldStyleValue) {\n                    continue;\n                }\n                propertiesUpdated = true;\n                if (newStyleValue) {\n                    checkStyleValue(newStyleValue);\n                    projectionOptions.styleApplyer(domNode, styleName, newStyleValue);\n                }\n                else {\n                    projectionOptions.styleApplyer(domNode, styleName, '');\n                }\n            }\n        }\n        else {\n            if (!propValue && typeof previousValue === 'string') {\n                propValue = '';\n            }\n            if (propName === 'value') {\n                const domValue = domNode[propName];\n                if (domValue !== propValue &&\n                    (domNode['oninput-value']\n                        ? domValue === domNode['oninput-value']\n                        : propValue !== previousValue)) {\n                    domNode[propName] = propValue;\n                    domNode['oninput-value'] = undefined;\n                }\n                if (propValue !== previousValue) {\n                    propertiesUpdated = true;\n                }\n            }\n            else if (propName !== 'key' && propValue !== previousValue) {\n                const type = typeof propValue;\n                if (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n                    updateEvent(domNode, propName.substr(2), propValue, projectionOptions, properties.bind, previousValue);\n                }\n                else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n                    updateAttribute(domNode, propName, propValue, projectionOptions);\n                }\n                else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n                    if (domNode[propName] !== propValue) {\n                        domNode[propName] = propValue;\n                    }\n                }\n                else {\n                    domNode[propName] = propValue;\n                }\n                propertiesUpdated = true;\n            }\n        }\n    }\n    return propertiesUpdated;\n}\nfunction findIndexOfChild(children, sameAs, start) {\n    for (let i = start; i < children.length; i++) {\n        if (same(children[i], sameAs)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function toParentVNode(domNode) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        domNode,\n        type: VNODE\n    };\n}\nexport function toTextVNode(data) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        text: `${data}`,\n        domNode: undefined,\n        type: VNODE\n    };\n}\nfunction toInternalWNode(instance, instanceData) {\n    return {\n        instance,\n        rendered: [],\n        coreProperties: instanceData.coreProperties,\n        children: instance.children,\n        widgetConstructor: instance.constructor,\n        properties: instanceData.inputProperties,\n        type: WNODE\n    };\n}\nexport function filterAndDecorateChildren(children, instance) {\n    if (children === undefined) {\n        return emptyArray;\n    }\n    children = Array.isArray(children) ? children : [children];\n    for (let i = 0; i < children.length;) {\n        const child = children[i];\n        if (child === undefined || child === null) {\n            children.splice(i, 1);\n            continue;\n        }\n        else if (typeof child === 'string') {\n            children[i] = toTextVNode(child);\n        }\n        else {\n            if (isVNode(child)) {\n                if (child.properties.bind === undefined) {\n                    child.properties.bind = instance;\n                    if (child.children && child.children.length > 0) {\n                        filterAndDecorateChildren(child.children, instance);\n                    }\n                }\n            }\n            else {\n                if (!child.coreProperties) {\n                    const instanceData = widgetInstanceMap.get(instance);\n                    child.coreProperties = {\n                        bind: instance,\n                        baseRegistry: instanceData.coreProperties.baseRegistry\n                    };\n                }\n                if (child.children && child.children.length > 0) {\n                    filterAndDecorateChildren(child.children, instance);\n                }\n            }\n        }\n        i++;\n    }\n    return children;\n}\nfunction nodeAdded(dnode, transitions) {\n    if (isVNode(dnode) && dnode.properties) {\n        const enterAnimation = dnode.properties.enterAnimation;\n        if (enterAnimation) {\n            if (typeof enterAnimation === 'function') {\n                enterAnimation(dnode.domNode, dnode.properties);\n            }\n            else {\n                transitions.enter(dnode.domNode, dnode.properties, enterAnimation);\n            }\n        }\n    }\n}\nfunction nodeToRemove(dnode, transitions, projectionOptions) {\n    if (isWNode(dnode)) {\n        const rendered = dnode.rendered || emptyArray;\n        if (dnode.instance) {\n            const instanceData = widgetInstanceMap.get(dnode.instance);\n            instanceData.onDetach();\n            instanceMap.delete(dnode.instance);\n        }\n        for (let i = 0; i < rendered.length; i++) {\n            nodeToRemove(rendered[i], transitions, projectionOptions);\n        }\n    }\n    else {\n        const domNode = dnode.domNode;\n        const properties = dnode.properties;\n        if (dnode.children && dnode.children.length > 0) {\n            for (let i = 0; i < dnode.children.length; i++) {\n                nodeToRemove(dnode.children[i], transitions, projectionOptions);\n            }\n        }\n        const exitAnimation = properties.exitAnimation;\n        if (properties && exitAnimation) {\n            domNode.style.pointerEvents = 'none';\n            const removeDomNode = function () {\n                domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n                dnode.domNode = undefined;\n            };\n            if (typeof exitAnimation === 'function') {\n                exitAnimation(domNode, removeDomNode, properties);\n                return;\n            }\n            else {\n                transitions.exit(dnode.domNode, properties, exitAnimation, removeDomNode);\n                return;\n            }\n        }\n        domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n        dnode.domNode = undefined;\n    }\n}\nfunction checkDistinguishable(childNodes, indexToCheck, parentInstance) {\n    const childNode = childNodes[indexToCheck];\n    if (isVNode(childNode) && !childNode.tag) {\n        return; // Text nodes need not be distinguishable\n    }\n    const { key } = childNode.properties;\n    if (key === undefined || key === null) {\n        for (let i = 0; i < childNodes.length; i++) {\n            if (i !== indexToCheck) {\n                const node = childNodes[i];\n                if (same(node, childNode)) {\n                    let nodeIdentifier;\n                    const parentName = parentInstance.constructor.name || 'unknown';\n                    if (isWNode(childNode)) {\n                        nodeIdentifier = childNode.widgetConstructor.name || 'unknown';\n                    }\n                    else {\n                        nodeIdentifier = childNode.tag;\n                    }\n                    console.warn(`A widget (${parentName}) has had a child addded or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`);\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction updateChildren(parentVNode, oldChildren, newChildren, parentInstance, projectionOptions) {\n    oldChildren = oldChildren || emptyArray;\n    newChildren = newChildren;\n    const oldChildrenLength = oldChildren.length;\n    const newChildrenLength = newChildren.length;\n    const transitions = projectionOptions.transitions;\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    projectionOptions = Object.assign({}, projectionOptions, { depth: projectionOptions.depth + 1 });\n    let oldIndex = 0;\n    let newIndex = 0;\n    let i;\n    let textUpdated = false;\n    while (newIndex < newChildrenLength) {\n        let oldChild = oldIndex < oldChildrenLength ? oldChildren[oldIndex] : undefined;\n        const newChild = newChildren[newIndex];\n        if (isVNode(newChild) && typeof newChild.deferredPropertiesCallback === 'function') {\n            newChild.inserted = isVNode(oldChild) && oldChild.inserted;\n            addDeferredProperties(newChild, projectionOptions);\n        }\n        if (oldChild !== undefined && same(oldChild, newChild)) {\n            textUpdated = updateDom(oldChild, newChild, projectionOptions, parentVNode, parentInstance) || textUpdated;\n            oldIndex++;\n            newIndex++;\n            continue;\n        }\n        const findOldIndex = findIndexOfChild(oldChildren, newChild, oldIndex + 1);\n        const addChild = () => {\n            let insertBeforeDomNode = undefined;\n            let child = oldChildren[oldIndex];\n            if (child) {\n                let nextIndex = oldIndex + 1;\n                let insertBeforeChildren = [child];\n                while (insertBeforeChildren.length) {\n                    const insertBefore = insertBeforeChildren.shift();\n                    if (isWNode(insertBefore)) {\n                        if (insertBefore.rendered) {\n                            insertBeforeChildren.push(...insertBefore.rendered);\n                        }\n                    }\n                    else {\n                        if (insertBefore.domNode) {\n                            insertBeforeDomNode = insertBefore.domNode;\n                            break;\n                        }\n                    }\n                    if (insertBeforeChildren.length === 0 && oldChildren[nextIndex]) {\n                        insertBeforeChildren.push(oldChildren[nextIndex]);\n                        nextIndex++;\n                    }\n                }\n            }\n            createDom(newChild, parentVNode, insertBeforeDomNode, projectionOptions, parentInstance);\n            nodeAdded(newChild, transitions);\n            const indexToCheck = newIndex;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(newChildren, indexToCheck, parentInstance);\n            });\n        };\n        if (!oldChild || findOldIndex === -1) {\n            addChild();\n            newIndex++;\n            continue;\n        }\n        const removeChild = () => {\n            const indexToCheck = oldIndex;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(oldChildren, indexToCheck, parentInstance);\n            });\n            if (isWNode(oldChild)) {\n                const item = instanceMap.get(oldChild.instance);\n                if (item) {\n                    oldChild = item.dnode;\n                }\n            }\n            nodeToRemove(oldChild, transitions, projectionOptions);\n        };\n        const findNewIndex = findIndexOfChild(newChildren, oldChild, newIndex + 1);\n        if (findNewIndex === -1) {\n            removeChild();\n            oldIndex++;\n            continue;\n        }\n        addChild();\n        removeChild();\n        oldIndex++;\n        newIndex++;\n    }\n    if (oldChildrenLength > oldIndex) {\n        // Remove child fragments\n        for (i = oldIndex; i < oldChildrenLength; i++) {\n            const indexToCheck = i;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(oldChildren, indexToCheck, parentInstance);\n            });\n            let childToRemove = oldChildren[i];\n            if (isWNode(childToRemove)) {\n                const item = instanceMap.get(childToRemove.instance);\n                if (item) {\n                    childToRemove = item.dnode;\n                }\n            }\n            nodeToRemove(childToRemove, transitions, projectionOptions);\n        }\n    }\n    return textUpdated;\n}\nfunction addChildren(parentVNode, children, projectionOptions, parentInstance, insertBefore = undefined, childNodes) {\n    if (children === undefined) {\n        return;\n    }\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectorState.merge && childNodes === undefined) {\n        childNodes = arrayFrom(parentVNode.domNode.childNodes);\n    }\n    const transitions = projectionOptions.transitions;\n    projectionOptions = Object.assign({}, projectionOptions, { depth: projectionOptions.depth + 1 });\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isVNode(child)) {\n            if (projectorState.merge && childNodes) {\n                let domElement = undefined;\n                while (child.domNode === undefined && childNodes.length > 0) {\n                    domElement = childNodes.shift();\n                    if (domElement && domElement.tagName === (child.tag.toUpperCase() || undefined)) {\n                        child.domNode = domElement;\n                    }\n                }\n            }\n            createDom(child, parentVNode, insertBefore, projectionOptions, parentInstance);\n        }\n        else {\n            createDom(child, parentVNode, insertBefore, projectionOptions, parentInstance, childNodes);\n        }\n        nodeAdded(child, transitions);\n    }\n}\nfunction initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions) {\n    addChildren(dnode, dnode.children, projectionOptions, parentInstance, undefined);\n    if (typeof dnode.deferredPropertiesCallback === 'function' && dnode.inserted === undefined) {\n        addDeferredProperties(dnode, projectionOptions);\n    }\n    if (dnode.attributes && dnode.events) {\n        updateAttributes(domNode, {}, dnode.attributes, projectionOptions);\n        updateProperties(domNode, {}, dnode.properties, projectionOptions, false);\n        removeOrphanedEvents(domNode, {}, dnode.events, projectionOptions, true);\n        const events = dnode.events;\n        Object.keys(events).forEach((event) => {\n            updateEvent(domNode, event, events[event], projectionOptions, dnode.properties.bind);\n        });\n    }\n    else {\n        updateProperties(domNode, {}, dnode.properties, projectionOptions);\n    }\n    if (dnode.properties.key !== null && dnode.properties.key !== undefined) {\n        const instanceData = widgetInstanceMap.get(parentInstance);\n        instanceData.nodeHandler.add(domNode, `${dnode.properties.key}`);\n    }\n    dnode.inserted = true;\n}\nfunction createDom(dnode, parentVNode, insertBefore, projectionOptions, parentInstance, childNodes) {\n    let domNode;\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (isWNode(dnode)) {\n        let { widgetConstructor } = dnode;\n        const parentInstanceData = widgetInstanceMap.get(parentInstance);\n        if (!isWidgetBaseConstructor(widgetConstructor)) {\n            const item = parentInstanceData.registry().get(widgetConstructor);\n            if (item === null) {\n                return;\n            }\n            widgetConstructor = item;\n        }\n        const instance = new widgetConstructor();\n        dnode.instance = instance;\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (instanceData.rendering === false) {\n                projectorState.renderQueue.push({ instance, depth: projectionOptions.depth });\n                scheduleRender(projectionOptions);\n            }\n        };\n        instanceData.rendering = true;\n        instance.__setCoreProperties__(dnode.coreProperties);\n        instance.__setChildren__(dnode.children);\n        instance.__setProperties__(dnode.properties);\n        const rendered = instance.__render__();\n        instanceData.rendering = false;\n        if (rendered) {\n            const filteredRendered = filterAndDecorateChildren(rendered, instance);\n            dnode.rendered = filteredRendered;\n            addChildren(parentVNode, filteredRendered, projectionOptions, instance, insertBefore, childNodes);\n        }\n        instanceMap.set(instance, { dnode, parentVNode });\n        instanceData.nodeHandler.addRoot();\n        projectorState.afterRenderCallbacks.push(() => {\n            instanceData.onAttach();\n        });\n    }\n    else {\n        if (projectorState.merge && projectorState.mergeElement !== undefined) {\n            domNode = dnode.domNode = projectionOptions.mergeElement;\n            projectorState.mergeElement = undefined;\n            initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions);\n            return;\n        }\n        const doc = parentVNode.domNode.ownerDocument;\n        if (!dnode.tag && typeof dnode.text === 'string') {\n            if (dnode.domNode !== undefined && parentVNode.domNode) {\n                const newDomNode = dnode.domNode.ownerDocument.createTextNode(dnode.text);\n                if (parentVNode.domNode === dnode.domNode.parentNode) {\n                    parentVNode.domNode.replaceChild(newDomNode, dnode.domNode);\n                }\n                else {\n                    parentVNode.domNode.appendChild(newDomNode);\n                    dnode.domNode.parentNode && dnode.domNode.parentNode.removeChild(dnode.domNode);\n                }\n                dnode.domNode = newDomNode;\n            }\n            else {\n                domNode = dnode.domNode = doc.createTextNode(dnode.text);\n                if (insertBefore !== undefined) {\n                    parentVNode.domNode.insertBefore(domNode, insertBefore);\n                }\n                else {\n                    parentVNode.domNode.appendChild(domNode);\n                }\n            }\n        }\n        else {\n            if (dnode.domNode === undefined) {\n                if (dnode.tag === 'svg') {\n                    projectionOptions = Object.assign({}, projectionOptions, { namespace: NAMESPACE_SVG });\n                }\n                if (projectionOptions.namespace !== undefined) {\n                    domNode = dnode.domNode = doc.createElementNS(projectionOptions.namespace, dnode.tag);\n                }\n                else {\n                    domNode = dnode.domNode = dnode.domNode || doc.createElement(dnode.tag);\n                }\n            }\n            else {\n                domNode = dnode.domNode;\n            }\n            initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions);\n            if (insertBefore !== undefined) {\n                parentVNode.domNode.insertBefore(domNode, insertBefore);\n            }\n            else if (domNode.parentNode !== parentVNode.domNode) {\n                parentVNode.domNode.appendChild(domNode);\n            }\n        }\n    }\n}\nfunction updateDom(previous, dnode, projectionOptions, parentVNode, parentInstance) {\n    if (isWNode(dnode)) {\n        const { instance } = previous;\n        const { parentVNode, dnode: node } = instanceMap.get(instance);\n        const previousRendered = node ? node.rendered : previous.rendered;\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.rendering = true;\n        instance.__setCoreProperties__(dnode.coreProperties);\n        instance.__setChildren__(dnode.children);\n        instance.__setProperties__(dnode.properties);\n        dnode.instance = instance;\n        if (instanceData.dirty === true) {\n            const rendered = instance.__render__();\n            instanceData.rendering = false;\n            dnode.rendered = filterAndDecorateChildren(rendered, instance);\n            updateChildren(parentVNode, previousRendered, dnode.rendered, instance, projectionOptions);\n        }\n        else {\n            instanceData.rendering = false;\n            dnode.rendered = previousRendered;\n        }\n        instanceMap.set(instance, { dnode, parentVNode });\n        instanceData.nodeHandler.addRoot();\n    }\n    else {\n        if (previous === dnode) {\n            return false;\n        }\n        const domNode = (dnode.domNode = previous.domNode);\n        let textUpdated = false;\n        let updated = false;\n        if (!dnode.tag && typeof dnode.text === 'string') {\n            if (dnode.text !== previous.text) {\n                const newDomNode = domNode.ownerDocument.createTextNode(dnode.text);\n                domNode.parentNode.replaceChild(newDomNode, domNode);\n                dnode.domNode = newDomNode;\n                textUpdated = true;\n                return textUpdated;\n            }\n        }\n        else {\n            if (dnode.tag && dnode.tag.lastIndexOf('svg', 0) === 0) {\n                projectionOptions = Object.assign({}, projectionOptions, { namespace: NAMESPACE_SVG });\n            }\n            if (previous.children !== dnode.children) {\n                const children = filterAndDecorateChildren(dnode.children, parentInstance);\n                dnode.children = children;\n                updated =\n                    updateChildren(dnode, previous.children, children, parentInstance, projectionOptions) || updated;\n            }\n            const previousProperties = buildPreviousProperties(domNode, previous, dnode);\n            if (dnode.attributes && dnode.events) {\n                updateAttributes(domNode, previousProperties.attributes, dnode.attributes, projectionOptions);\n                updated =\n                    updateProperties(domNode, previousProperties.properties, dnode.properties, projectionOptions, false) || updated;\n                removeOrphanedEvents(domNode, previousProperties.events, dnode.events, projectionOptions, true);\n                const events = dnode.events;\n                Object.keys(events).forEach((event) => {\n                    updateEvent(domNode, event, events[event], projectionOptions, dnode.properties.bind, previousProperties.events[event]);\n                });\n            }\n            else {\n                updated =\n                    updateProperties(domNode, previousProperties.properties, dnode.properties, projectionOptions) ||\n                        updated;\n            }\n            if (dnode.properties.key !== null && dnode.properties.key !== undefined) {\n                const instanceData = widgetInstanceMap.get(parentInstance);\n                instanceData.nodeHandler.add(domNode, `${dnode.properties.key}`);\n            }\n        }\n        if (updated && dnode.properties && dnode.properties.updateAnimation) {\n            dnode.properties.updateAnimation(domNode, dnode.properties, previous.properties);\n        }\n    }\n}\nfunction addDeferredProperties(vnode, projectionOptions) {\n    // transfer any properties that have been passed - as these must be decorated properties\n    vnode.decoratedDeferredProperties = vnode.properties;\n    const properties = vnode.deferredPropertiesCallback(!!vnode.inserted);\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    vnode.properties = Object.assign({}, properties, vnode.decoratedDeferredProperties);\n    projectorState.deferredRenderCallbacks.push(() => {\n        const properties = Object.assign({}, vnode.deferredPropertiesCallback(!!vnode.inserted), vnode.decoratedDeferredProperties);\n        updateProperties(vnode.domNode, vnode.properties, properties, projectionOptions);\n        vnode.properties = properties;\n    });\n}\nfunction runDeferredRenderCallbacks(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectorState.deferredRenderCallbacks.length) {\n        if (projectionOptions.sync) {\n            while (projectorState.deferredRenderCallbacks.length) {\n                const callback = projectorState.deferredRenderCallbacks.shift();\n                callback && callback();\n            }\n        }\n        else {\n            global.requestAnimationFrame(() => {\n                while (projectorState.deferredRenderCallbacks.length) {\n                    const callback = projectorState.deferredRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n    }\n}\nfunction runAfterRenderCallbacks(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectionOptions.sync) {\n        while (projectorState.afterRenderCallbacks.length) {\n            const callback = projectorState.afterRenderCallbacks.shift();\n            callback && callback();\n        }\n    }\n    else {\n        if (global.requestIdleCallback) {\n            global.requestIdleCallback(() => {\n                while (projectorState.afterRenderCallbacks.length) {\n                    const callback = projectorState.afterRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n        else {\n            setTimeout(() => {\n                while (projectorState.afterRenderCallbacks.length) {\n                    const callback = projectorState.afterRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n    }\n}\nfunction scheduleRender(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectionOptions.sync) {\n        render(projectionOptions);\n    }\n    else if (projectorState.renderScheduled === undefined) {\n        projectorState.renderScheduled = global.requestAnimationFrame(() => {\n            render(projectionOptions);\n        });\n    }\n}\nfunction render(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    projectorState.renderScheduled = undefined;\n    const renderQueue = projectorState.renderQueue;\n    const renders = [...renderQueue];\n    projectorState.renderQueue = [];\n    renders.sort((a, b) => a.depth - b.depth);\n    const previouslyRendered = [];\n    while (renders.length) {\n        const { instance } = renders.shift();\n        if (instanceMap.has(instance) && previouslyRendered.indexOf(instance) === -1) {\n            previouslyRendered.push(instance);\n            const { parentVNode, dnode } = instanceMap.get(instance);\n            const instanceData = widgetInstanceMap.get(instance);\n            updateDom(dnode, toInternalWNode(instance, instanceData), projectionOptions, parentVNode, instance);\n        }\n    }\n    runAfterRenderCallbacks(projectionOptions);\n    runDeferredRenderCallbacks(projectionOptions);\n}\nexport const dom = {\n    append: function (parentNode, instance, projectionOptions = {}) {\n        const instanceData = widgetInstanceMap.get(instance);\n        const finalProjectorOptions = getProjectionOptions(projectionOptions, instance);\n        const projectorState = {\n            afterRenderCallbacks: [],\n            deferredRenderCallbacks: [],\n            nodeMap: new WeakMap(),\n            renderScheduled: undefined,\n            renderQueue: [],\n            merge: projectionOptions.merge || false,\n            mergeElement: projectionOptions.mergeElement\n        };\n        projectorStateMap.set(instance, projectorState);\n        finalProjectorOptions.rootNode = parentNode;\n        const parentVNode = toParentVNode(finalProjectorOptions.rootNode);\n        const node = toInternalWNode(instance, instanceData);\n        instanceMap.set(instance, { dnode: node, parentVNode });\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (instanceData.rendering === false) {\n                projectorState.renderQueue.push({ instance, depth: finalProjectorOptions.depth });\n                scheduleRender(finalProjectorOptions);\n            }\n        };\n        updateDom(node, node, finalProjectorOptions, parentVNode, instance);\n        projectorState.afterRenderCallbacks.push(() => {\n            instanceData.onAttach();\n        });\n        runDeferredRenderCallbacks(finalProjectorOptions);\n        runAfterRenderCallbacks(finalProjectorOptions);\n        return {\n            domNode: finalProjectorOptions.rootNode\n        };\n    },\n    create: function (instance, projectionOptions) {\n        return this.append(document.createElement('div'), instance, projectionOptions);\n    },\n    merge: function (element, instance, projectionOptions = {}) {\n        projectionOptions.merge = true;\n        projectionOptions.mergeElement = element;\n        const projection = this.append(element.parentNode, instance, projectionOptions);\n        const projectorState = projectorStateMap.get(instance);\n        projectorState.merge = false;\n        return projection;\n    }\n};\n//# sourceMappingURL=vdom.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/vdom.mjs\n// module id = ./node_modules/@dojo/widget-core/vdom.mjs\n// module chunks = accordion-pane","/*** IMPORTS FROM imports-loader ***/\nvar widgetFactory = require(\"src/accordion-pane\");\n\nvar registerCustomElement = require('@dojo/widget-core/registerCustomElement').default;\n\nvar defaultExport = widgetFactory.default;\ndefaultExport && registerCustomElement(defaultExport);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/imports-loader?widgetFactory=src/accordion-pane!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module id = ./node_modules/imports-loader/index.js?widgetFactory=src/accordion-pane!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module chunks = accordion-pane","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = ./node_modules/process/browser.js\n// module chunks = accordion-pane","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = ./node_modules/tslib/tslib.es6.js\n// module chunks = accordion-pane","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = ./node_modules/webpack/buildin/global.js\n// module chunks = accordion-pane","import { after } from '@dojo/core/aspect';\nimport { assign } from '@dojo/core/lang';\nimport { DNode, WNode } from '@dojo/widget-core/interfaces';\nimport { customElement } from '@dojo/widget-core/decorators/customElement';\nimport { includes } from '@dojo/shim/array';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/widget-core/mixins/Themed';\nimport { v } from '@dojo/widget-core/d';\nimport { WidgetBase } from '@dojo/widget-core/WidgetBase';\n\nimport TitlePane from '../title-pane/index';\nimport * as css from '../theme/accordion-pane.m.css';\n\n/**\n * @type AccordionPaneProperties\n *\n * Properties that can be set on AccordionPane components\n *\n * @property onRequestClose   Called when the title of an open pane is clicked\n * @property onRequestOpen    Called when the title of a closed pane is clicked\n * @property openKeys         Array of TitlePane keys indicating which panes should be open\n */\nexport interface AccordionPaneProperties extends ThemedProperties {\n\tonRequestClose?(key: string): void;\n\tonRequestOpen?(key: string): void;\n\topenKeys?: string[];\n}\n\nexport const ThemedBase = ThemedMixin(WidgetBase);\n\n@theme(css)\n@customElement<AccordionPaneProperties>({\n\ttag: 'dojo-accordion-pane',\n\tproperties: [ 'openKeys', 'theme', 'extraClasses' ],\n\tevents: [ 'onRequestClose', 'onRequestOpen' ]\n})\nexport class AccordionPaneBase<P extends AccordionPaneProperties = AccordionPaneProperties> extends ThemedBase<P, WNode<TitlePane>> {\n\tprivate _assignCallback(child: WNode<TitlePane>, functionName: 'onRequestClose' | 'onRequestOpen', callback: (key: string) => void) {\n\t\tconst existingProperty = child.properties[functionName];\n\t\tconst property = () => { callback.call(this, `${ child.properties.key }`); };\n\n\t\treturn existingProperty ? after(existingProperty, property) : property;\n\t}\n\n\tprotected onRequestClose(key: string) {\n\t\tconst { onRequestClose } = this.properties;\n\t\tonRequestClose && onRequestClose(key);\n\t}\n\n\tprotected onRequestOpen(key: string) {\n\t\tconst { onRequestOpen } = this.properties;\n\t\tonRequestOpen && onRequestOpen(key);\n\t}\n\n\tprotected renderChildren(): DNode[] {\n\t\tconst {\n\t\t\topenKeys = [],\n\t\t\ttheme\n\t\t} = this.properties;\n\n\t\treturn this.children.filter((child) => child).map(child => {\n\t\t\t// null checks skipped since children are filtered prior to mapping\n\t\t\tassign(child!.properties, {\n\t\t\t\tonRequestClose: this._assignCallback(child!, 'onRequestClose', this.onRequestClose),\n\t\t\t\tonRequestOpen: this._assignCallback(child!, 'onRequestOpen', this.onRequestOpen),\n\t\t\t\topen: includes(openKeys, child!.properties.key),\n\t\t\t\ttheme\n\t\t\t});\n\n\t\t\treturn child;\n\t\t});\n\t}\n\n\tprotected render(): DNode {\n\t\treturn v('div', { classes: this.theme(css.root) }, this.renderChildren());\n\t}\n}\n\nexport default class AccordionPane extends AccordionPaneBase<AccordionPaneProperties> {}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_accordion-pane!./src/accordion-pane/index.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/accordion-pane\",\"root\":\"_1sHNW3c_\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/theme/accordion-pane.m.css\n// module id = ./src/theme/accordion-pane.m.css\n// module chunks = accordion-pane"],"sourceRoot":""}